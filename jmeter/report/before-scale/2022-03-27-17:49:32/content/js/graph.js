/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 15261.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 3.0], [1.6, 3.0], [1.7, 3.0], [1.8, 3.0], [1.9, 3.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 4.0], [3.0, 4.0], [3.1, 4.0], [3.2, 4.0], [3.3, 4.0], [3.4, 5.0], [3.5, 5.0], [3.6, 5.0], [3.7, 5.0], [3.8, 6.0], [3.9, 6.0], [4.0, 7.0], [4.1, 7.0], [4.2, 8.0], [4.3, 8.0], [4.4, 9.0], [4.5, 9.0], [4.6, 9.0], [4.7, 9.0], [4.8, 9.0], [4.9, 84.0], [5.0, 84.0], [5.1, 87.0], [5.2, 87.0], [5.3, 92.0], [5.4, 92.0], [5.5, 94.0], [5.6, 94.0], [5.7, 95.0], [5.8, 95.0], [5.9, 96.0], [6.0, 96.0], [6.1, 97.0], [6.2, 97.0], [6.3, 97.0], [6.4, 97.0], [6.5, 98.0], [6.6, 98.0], [6.7, 98.0], [6.8, 98.0], [6.9, 98.0], [7.0, 98.0], [7.1, 98.0], [7.2, 98.0], [7.3, 99.0], [7.4, 99.0], [7.5, 99.0], [7.6, 99.0], [7.7, 99.0], [7.8, 99.0], [7.9, 99.0], [8.0, 99.0], [8.1, 99.0], [8.2, 99.0], [8.3, 100.0], [8.4, 100.0], [8.5, 100.0], [8.6, 100.0], [8.7, 100.0], [8.8, 100.0], [8.9, 100.0], [9.0, 100.0], [9.1, 100.0], [9.2, 100.0], [9.3, 100.0], [9.4, 100.0], [9.5, 100.0], [9.6, 100.0], [9.7, 100.0], [9.8, 100.0], [9.9, 100.0], [10.0, 100.0], [10.1, 100.0], [10.2, 100.0], [10.3, 100.0], [10.4, 100.0], [10.5, 101.0], [10.6, 101.0], [10.7, 101.0], [10.8, 101.0], [10.9, 101.0], [11.0, 101.0], [11.1, 101.0], [11.2, 101.0], [11.3, 101.0], [11.4, 101.0], [11.5, 101.0], [11.6, 101.0], [11.7, 101.0], [11.8, 101.0], [11.9, 101.0], [12.0, 101.0], [12.1, 101.0], [12.2, 101.0], [12.3, 101.0], [12.4, 101.0], [12.5, 102.0], [12.6, 102.0], [12.7, 102.0], [12.8, 102.0], [12.9, 102.0], [13.0, 102.0], [13.1, 102.0], [13.2, 102.0], [13.3, 102.0], [13.4, 102.0], [13.5, 102.0], [13.6, 102.0], [13.7, 102.0], [13.8, 102.0], [13.9, 103.0], [14.0, 103.0], [14.1, 103.0], [14.2, 103.0], [14.3, 103.0], [14.4, 103.0], [14.5, 103.0], [14.6, 103.0], [14.7, 103.0], [14.8, 103.0], [14.9, 104.0], [15.0, 104.0], [15.1, 104.0], [15.2, 104.0], [15.3, 104.0], [15.4, 104.0], [15.5, 105.0], [15.6, 105.0], [15.7, 106.0], [15.8, 106.0], [15.9, 106.0], [16.0, 106.0], [16.1, 106.0], [16.2, 106.0], [16.3, 107.0], [16.4, 107.0], [16.5, 194.0], [16.6, 194.0], [16.7, 194.0], [16.8, 194.0], [16.9, 194.0], [17.0, 194.0], [17.1, 195.0], [17.2, 195.0], [17.3, 195.0], [17.4, 195.0], [17.5, 196.0], [17.6, 196.0], [17.7, 196.0], [17.8, 196.0], [17.9, 196.0], [18.0, 196.0], [18.1, 196.0], [18.2, 196.0], [18.3, 197.0], [18.4, 197.0], [18.5, 197.0], [18.6, 197.0], [18.7, 197.0], [18.8, 197.0], [18.9, 197.0], [19.0, 197.0], [19.1, 197.0], [19.2, 197.0], [19.3, 198.0], [19.4, 198.0], [19.5, 198.0], [19.6, 198.0], [19.7, 198.0], [19.8, 198.0], [19.9, 198.0], [20.0, 198.0], [20.1, 198.0], [20.2, 198.0], [20.3, 198.0], [20.4, 198.0], [20.5, 198.0], [20.6, 198.0], [20.7, 198.0], [20.8, 198.0], [20.9, 199.0], [21.0, 199.0], [21.1, 199.0], [21.2, 199.0], [21.3, 199.0], [21.4, 199.0], [21.5, 199.0], [21.6, 199.0], [21.7, 199.0], [21.8, 199.0], [21.9, 199.0], [22.0, 199.0], [22.1, 200.0], [22.2, 200.0], [22.3, 200.0], [22.4, 200.0], [22.5, 200.0], [22.6, 200.0], [22.7, 200.0], [22.8, 200.0], [22.9, 200.0], [23.0, 200.0], [23.1, 200.0], [23.2, 200.0], [23.3, 200.0], [23.4, 200.0], [23.5, 201.0], [23.6, 201.0], [23.7, 201.0], [23.8, 201.0], [23.9, 201.0], [24.0, 201.0], [24.1, 201.0], [24.2, 201.0], [24.3, 201.0], [24.4, 201.0], [24.5, 201.0], [24.6, 201.0], [24.7, 201.0], [24.8, 202.0], [24.9, 202.0], [25.0, 202.0], [25.1, 202.0], [25.2, 202.0], [25.3, 202.0], [25.4, 202.0], [25.5, 203.0], [25.6, 203.0], [25.7, 203.0], [25.8, 203.0], [25.9, 203.0], [26.0, 203.0], [26.1, 203.0], [26.2, 203.0], [26.3, 203.0], [26.4, 203.0], [26.5, 203.0], [26.6, 203.0], [26.7, 203.0], [26.8, 203.0], [26.9, 203.0], [27.0, 203.0], [27.1, 204.0], [27.2, 204.0], [27.3, 204.0], [27.4, 204.0], [27.5, 204.0], [27.6, 204.0], [27.7, 204.0], [27.8, 204.0], [27.9, 204.0], [28.0, 204.0], [28.1, 204.0], [28.2, 204.0], [28.3, 204.0], [28.4, 204.0], [28.5, 204.0], [28.6, 204.0], [28.7, 206.0], [28.8, 206.0], [28.9, 206.0], [29.0, 206.0], [29.1, 206.0], [29.2, 206.0], [29.3, 206.0], [29.4, 206.0], [29.5, 206.0], [29.6, 206.0], [29.7, 206.0], [29.8, 206.0], [29.9, 206.0], [30.0, 206.0], [30.1, 206.0], [30.2, 206.0], [30.3, 207.0], [30.4, 207.0], [30.5, 207.0], [30.6, 207.0], [30.7, 207.0], [30.8, 207.0], [30.9, 208.0], [31.0, 208.0], [31.1, 209.0], [31.2, 209.0], [31.3, 209.0], [31.4, 209.0], [31.5, 211.0], [31.6, 211.0], [31.7, 212.0], [31.8, 212.0], [31.9, 214.0], [32.0, 214.0], [32.1, 215.0], [32.2, 215.0], [32.3, 268.0], [32.4, 268.0], [32.5, 288.0], [32.6, 288.0], [32.7, 290.0], [32.8, 290.0], [32.9, 291.0], [33.0, 291.0], [33.1, 293.0], [33.2, 293.0], [33.3, 293.0], [33.4, 293.0], [33.5, 294.0], [33.6, 294.0], [33.7, 294.0], [33.8, 294.0], [33.9, 294.0], [34.0, 294.0], [34.1, 294.0], [34.2, 294.0], [34.3, 295.0], [34.4, 295.0], [34.5, 295.0], [34.6, 295.0], [34.7, 295.0], [34.8, 295.0], [34.9, 296.0], [35.0, 296.0], [35.1, 296.0], [35.2, 296.0], [35.3, 296.0], [35.4, 296.0], [35.5, 296.0], [35.6, 296.0], [35.7, 296.0], [35.8, 296.0], [35.9, 297.0], [36.0, 297.0], [36.1, 297.0], [36.2, 297.0], [36.3, 297.0], [36.4, 297.0], [36.5, 297.0], [36.6, 297.0], [36.7, 297.0], [36.8, 297.0], [36.9, 298.0], [37.0, 298.0], [37.1, 298.0], [37.2, 298.0], [37.3, 298.0], [37.4, 298.0], [37.5, 298.0], [37.6, 298.0], [37.7, 299.0], [37.8, 299.0], [37.9, 299.0], [38.0, 299.0], [38.1, 299.0], [38.2, 299.0], [38.3, 299.0], [38.4, 299.0], [38.5, 299.0], [38.6, 299.0], [38.7, 299.0], [38.8, 299.0], [38.9, 299.0], [39.0, 299.0], [39.1, 299.0], [39.2, 299.0], [39.3, 299.0], [39.4, 299.0], [39.5, 299.0], [39.6, 299.0], [39.7, 299.0], [39.8, 299.0], [39.9, 299.0], [40.0, 299.0], [40.1, 300.0], [40.2, 300.0], [40.3, 300.0], [40.4, 300.0], [40.5, 300.0], [40.6, 300.0], [40.7, 300.0], [40.8, 300.0], [40.9, 300.0], [41.0, 300.0], [41.1, 300.0], [41.2, 300.0], [41.3, 300.0], [41.4, 300.0], [41.5, 300.0], [41.6, 300.0], [41.7, 300.0], [41.8, 300.0], [41.9, 300.0], [42.0, 300.0], [42.1, 301.0], [42.2, 301.0], [42.3, 301.0], [42.4, 301.0], [42.5, 301.0], [42.6, 301.0], [42.7, 301.0], [42.8, 301.0], [42.9, 301.0], [43.0, 301.0], [43.1, 301.0], [43.2, 301.0], [43.3, 301.0], [43.4, 301.0], [43.5, 302.0], [43.6, 302.0], [43.7, 302.0], [43.8, 302.0], [43.9, 302.0], [44.0, 302.0], [44.1, 302.0], [44.2, 302.0], [44.3, 302.0], [44.4, 302.0], [44.5, 302.0], [44.6, 302.0], [44.7, 303.0], [44.8, 303.0], [44.9, 303.0], [45.0, 303.0], [45.1, 303.0], [45.2, 303.0], [45.3, 303.0], [45.4, 303.0], [45.5, 303.0], [45.6, 303.0], [45.7, 303.0], [45.8, 303.0], [45.9, 303.0], [46.0, 303.0], [46.1, 303.0], [46.2, 303.0], [46.3, 304.0], [46.4, 304.0], [46.5, 304.0], [46.6, 304.0], [46.7, 304.0], [46.8, 304.0], [46.9, 304.0], [47.0, 304.0], [47.1, 304.0], [47.2, 304.0], [47.3, 304.0], [47.4, 304.0], [47.5, 304.0], [47.6, 304.0], [47.7, 305.0], [47.8, 305.0], [47.9, 306.0], [48.0, 306.0], [48.1, 312.0], [48.2, 312.0], [48.3, 319.0], [48.4, 319.0], [48.5, 386.0], [48.6, 386.0], [48.7, 388.0], [48.8, 388.0], [48.9, 391.0], [49.0, 391.0], [49.1, 393.0], [49.2, 393.0], [49.3, 394.0], [49.4, 394.0], [49.5, 394.0], [49.6, 394.0], [49.7, 395.0], [49.8, 395.0], [49.9, 395.0], [50.0, 395.0], [50.1, 396.0], [50.2, 396.0], [50.3, 396.0], [50.4, 396.0], [50.5, 396.0], [50.6, 396.0], [50.7, 396.0], [50.8, 396.0], [50.9, 397.0], [51.0, 397.0], [51.1, 397.0], [51.2, 397.0], [51.3, 397.0], [51.4, 397.0], [51.5, 397.0], [51.6, 397.0], [51.7, 398.0], [51.8, 398.0], [51.9, 398.0], [52.0, 398.0], [52.1, 398.0], [52.2, 398.0], [52.3, 398.0], [52.4, 398.0], [52.5, 398.0], [52.6, 398.0], [52.7, 399.0], [52.8, 399.0], [52.9, 399.0], [53.0, 399.0], [53.1, 399.0], [53.2, 399.0], [53.3, 399.0], [53.4, 399.0], [53.5, 399.0], [53.6, 399.0], [53.7, 399.0], [53.8, 399.0], [53.9, 399.0], [54.0, 399.0], [54.1, 399.0], [54.2, 399.0], [54.3, 399.0], [54.4, 399.0], [54.5, 399.0], [54.6, 399.0], [54.7, 400.0], [54.8, 400.0], [54.9, 400.0], [55.0, 400.0], [55.1, 400.0], [55.2, 400.0], [55.3, 400.0], [55.4, 400.0], [55.5, 400.0], [55.6, 400.0], [55.7, 401.0], [55.8, 401.0], [55.9, 401.0], [56.0, 401.0], [56.1, 401.0], [56.2, 401.0], [56.3, 401.0], [56.4, 401.0], [56.5, 401.0], [56.6, 401.0], [56.7, 401.0], [56.8, 401.0], [56.9, 401.0], [57.0, 401.0], [57.1, 401.0], [57.2, 401.0], [57.3, 401.0], [57.4, 401.0], [57.5, 401.0], [57.6, 401.0], [57.7, 402.0], [57.8, 402.0], [57.9, 402.0], [58.0, 402.0], [58.1, 402.0], [58.2, 402.0], [58.3, 402.0], [58.4, 402.0], [58.5, 402.0], [58.6, 402.0], [58.7, 402.0], [58.8, 402.0], [58.9, 402.0], [59.0, 402.0], [59.1, 402.0], [59.2, 402.0], [59.3, 402.0], [59.4, 402.0], [59.5, 402.0], [59.6, 402.0], [59.7, 403.0], [59.8, 403.0], [59.9, 403.0], [60.0, 403.0], [60.1, 403.0], [60.2, 403.0], [60.3, 403.0], [60.4, 403.0], [60.5, 403.0], [60.6, 403.0], [60.7, 404.0], [60.8, 404.0], [60.9, 404.0], [61.0, 404.0], [61.1, 404.0], [61.2, 404.0], [61.3, 404.0], [61.4, 404.0], [61.5, 404.0], [61.6, 404.0], [61.7, 404.0], [61.8, 404.0], [61.9, 404.0], [62.0, 404.0], [62.1, 405.0], [62.2, 405.0], [62.3, 406.0], [62.4, 406.0], [62.5, 412.0], [62.6, 412.0], [62.7, 488.0], [62.8, 488.0], [62.9, 491.0], [63.0, 491.0], [63.1, 492.0], [63.2, 492.0], [63.3, 494.0], [63.4, 494.0], [63.5, 494.0], [63.6, 494.0], [63.7, 494.0], [63.8, 494.0], [63.9, 495.0], [64.0, 495.0], [64.1, 495.0], [64.2, 495.0], [64.3, 495.0], [64.4, 495.0], [64.5, 496.0], [64.6, 496.0], [64.7, 496.0], [64.8, 496.0], [64.9, 497.0], [65.0, 497.0], [65.1, 497.0], [65.2, 497.0], [65.3, 497.0], [65.4, 497.0], [65.5, 497.0], [65.6, 497.0], [65.7, 497.0], [65.8, 497.0], [65.9, 498.0], [66.0, 498.0], [66.1, 498.0], [66.2, 498.0], [66.3, 498.0], [66.4, 498.0], [66.5, 498.0], [66.6, 498.0], [66.7, 499.0], [66.8, 499.0], [66.9, 499.0], [67.0, 499.0], [67.1, 499.0], [67.2, 499.0], [67.3, 499.0], [67.4, 499.0], [67.5, 499.0], [67.6, 499.0], [67.7, 500.0], [67.8, 500.0], [67.9, 500.0], [68.0, 500.0], [68.1, 501.0], [68.2, 501.0], [68.3, 501.0], [68.4, 501.0], [68.5, 501.0], [68.6, 501.0], [68.7, 501.0], [68.8, 501.0], [68.9, 501.0], [69.0, 501.0], [69.1, 502.0], [69.2, 502.0], [69.3, 502.0], [69.4, 502.0], [69.5, 502.0], [69.6, 502.0], [69.7, 503.0], [69.8, 503.0], [69.9, 503.0], [70.0, 503.0], [70.1, 503.0], [70.2, 503.0], [70.3, 504.0], [70.4, 504.0], [70.5, 504.0], [70.6, 504.0], [70.7, 504.0], [70.8, 504.0], [70.9, 504.0], [71.0, 504.0], [71.1, 504.0], [71.2, 504.0], [71.3, 506.0], [71.4, 506.0], [71.5, 509.0], [71.6, 509.0], [71.7, 588.0], [71.8, 588.0], [71.9, 592.0], [72.0, 592.0], [72.1, 594.0], [72.2, 594.0], [72.3, 594.0], [72.4, 594.0], [72.5, 596.0], [72.6, 596.0], [72.7, 596.0], [72.8, 596.0], [72.9, 596.0], [73.0, 596.0], [73.1, 596.0], [73.2, 596.0], [73.3, 597.0], [73.4, 597.0], [73.5, 597.0], [73.6, 597.0], [73.7, 598.0], [73.8, 598.0], [73.9, 599.0], [74.0, 599.0], [74.1, 599.0], [74.2, 599.0], [74.3, 599.0], [74.4, 599.0], [74.5, 599.0], [74.6, 599.0], [74.7, 600.0], [74.8, 600.0], [74.9, 600.0], [75.0, 600.0], [75.1, 600.0], [75.2, 600.0], [75.3, 600.0], [75.4, 600.0], [75.5, 600.0], [75.6, 600.0], [75.7, 601.0], [75.8, 601.0], [75.9, 601.0], [76.0, 601.0], [76.1, 601.0], [76.2, 601.0], [76.3, 601.0], [76.4, 601.0], [76.5, 602.0], [76.6, 602.0], [76.7, 603.0], [76.8, 603.0], [76.9, 606.0], [77.0, 606.0], [77.1, 606.0], [77.2, 606.0], [77.3, 693.0], [77.4, 693.0], [77.5, 694.0], [77.6, 694.0], [77.7, 694.0], [77.8, 694.0], [77.9, 695.0], [78.0, 695.0], [78.1, 696.0], [78.2, 696.0], [78.3, 696.0], [78.4, 696.0], [78.5, 697.0], [78.6, 697.0], [78.7, 697.0], [78.8, 697.0], [78.9, 697.0], [79.0, 697.0], [79.1, 698.0], [79.2, 698.0], [79.3, 698.0], [79.4, 698.0], [79.5, 699.0], [79.6, 699.0], [79.7, 699.0], [79.8, 699.0], [79.9, 699.0], [80.0, 699.0], [80.1, 700.0], [80.2, 700.0], [80.3, 700.0], [80.4, 700.0], [80.5, 700.0], [80.6, 700.0], [80.7, 700.0], [80.8, 700.0], [80.9, 700.0], [81.0, 700.0], [81.1, 700.0], [81.2, 700.0], [81.3, 701.0], [81.4, 701.0], [81.5, 701.0], [81.6, 701.0], [81.7, 701.0], [81.8, 701.0], [81.9, 702.0], [82.0, 702.0], [82.1, 702.0], [82.2, 702.0], [82.3, 703.0], [82.4, 703.0], [82.5, 704.0], [82.6, 704.0], [82.7, 704.0], [82.8, 704.0], [82.9, 706.0], [83.0, 706.0], [83.1, 791.0], [83.2, 791.0], [83.3, 795.0], [83.4, 795.0], [83.5, 795.0], [83.6, 795.0], [83.7, 796.0], [83.8, 796.0], [83.9, 796.0], [84.0, 796.0], [84.1, 796.0], [84.2, 796.0], [84.3, 797.0], [84.4, 797.0], [84.5, 797.0], [84.6, 797.0], [84.7, 797.0], [84.8, 797.0], [84.9, 797.0], [85.0, 797.0], [85.1, 798.0], [85.2, 798.0], [85.3, 798.0], [85.4, 798.0], [85.5, 799.0], [85.6, 799.0], [85.7, 799.0], [85.8, 799.0], [85.9, 799.0], [86.0, 799.0], [86.1, 800.0], [86.2, 800.0], [86.3, 800.0], [86.4, 800.0], [86.5, 801.0], [86.6, 801.0], [86.7, 801.0], [86.8, 801.0], [86.9, 801.0], [87.0, 801.0], [87.1, 801.0], [87.2, 801.0], [87.3, 802.0], [87.4, 802.0], [87.5, 802.0], [87.6, 802.0], [87.7, 804.0], [87.8, 804.0], [87.9, 807.0], [88.0, 807.0], [88.1, 807.0], [88.2, 807.0], [88.3, 893.0], [88.4, 893.0], [88.5, 894.0], [88.6, 894.0], [88.7, 897.0], [88.8, 897.0], [88.9, 897.0], [89.0, 897.0], [89.1, 897.0], [89.2, 897.0], [89.3, 899.0], [89.4, 899.0], [89.5, 899.0], [89.6, 899.0], [89.7, 900.0], [89.8, 900.0], [89.9, 904.0], [90.0, 904.0], [90.1, 904.0], [90.2, 904.0], [90.3, 906.0], [90.4, 906.0], [90.5, 906.0], [90.6, 906.0], [90.7, 993.0], [90.8, 993.0], [90.9, 993.0], [91.0, 993.0], [91.1, 995.0], [91.2, 995.0], [91.3, 997.0], [91.4, 997.0], [91.5, 998.0], [91.6, 998.0], [91.7, 999.0], [91.8, 999.0], [91.9, 1000.0], [92.0, 1000.0], [92.1, 1001.0], [92.2, 1001.0], [92.3, 1094.0], [92.4, 1094.0], [92.5, 1095.0], [92.6, 1095.0], [92.7, 1102.0], [92.8, 1102.0], [92.9, 1104.0], [93.0, 1104.0], [93.1, 1194.0], [93.2, 1194.0], [93.3, 1199.0], [93.4, 1199.0], [93.5, 1199.0], [93.6, 1199.0], [93.7, 1203.0], [93.8, 1203.0], [93.9, 1208.0], [94.0, 1208.0], [94.1, 1297.0], [94.2, 1297.0], [94.3, 1299.0], [94.4, 1299.0], [94.5, 1300.0], [94.6, 1300.0], [94.7, 1301.0], [94.8, 1301.0], [94.9, 1303.0], [95.0, 1303.0], [95.1, 1388.0], [95.2, 1388.0], [95.3, 1396.0], [95.4, 1396.0], [95.5, 1402.0], [95.6, 1402.0], [95.7, 1493.0], [95.8, 1493.0], [95.9, 1502.0], [96.0, 1502.0], [96.1, 1597.0], [96.2, 1597.0], [96.3, 1693.0], [96.4, 1693.0], [96.5, 1700.0], [96.6, 1700.0], [96.7, 1897.0], [96.8, 1897.0], [96.9, 1902.0], [97.0, 1902.0], [97.1, 2195.0], [97.2, 2195.0], [97.3, 2296.0], [97.4, 2296.0], [97.5, 2394.0], [97.6, 2394.0], [97.7, 2502.0], [97.8, 2502.0], [97.9, 4443.0], [98.0, 4443.0], [98.1, 4482.0], [98.2, 4482.0], [98.3, 4942.0], [98.4, 4942.0], [98.5, 4981.0], [98.6, 4981.0], [98.7, 5011.0], [98.8, 5011.0], [98.9, 5019.0], [99.0, 5019.0], [99.1, 5022.0], [99.2, 5022.0], [99.3, 5064.0], [99.4, 5064.0], [99.5, 5143.0], [99.6, 5143.0], [99.7, 5421.0], [99.8, 5421.0], [99.9, 5426.0], [100.0, 5426.0]], "isOverall": false, "label": "query-1", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 2.0], [0.9, 2.0], [1.0, 3.0], [1.1, 3.0], [1.2, 3.0], [1.3, 3.0], [1.4, 3.0], [1.5, 3.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 4.0], [3.0, 4.0], [3.1, 4.0], [3.2, 4.0], [3.3, 4.0], [3.4, 4.0], [3.5, 4.0], [3.6, 5.0], [3.7, 5.0], [3.8, 5.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 6.0], [4.3, 6.0], [4.4, 6.0], [4.5, 6.0], [4.6, 6.0], [4.7, 91.0], [4.8, 91.0], [4.9, 95.0], [5.0, 95.0], [5.1, 95.0], [5.2, 95.0], [5.3, 97.0], [5.4, 97.0], [5.5, 97.0], [5.6, 97.0], [5.7, 97.0], [5.8, 97.0], [5.9, 98.0], [6.0, 98.0], [6.1, 98.0], [6.2, 98.0], [6.3, 98.0], [6.4, 98.0], [6.5, 98.0], [6.6, 98.0], [6.7, 98.0], [6.8, 98.0], [6.9, 99.0], [7.0, 99.0], [7.1, 99.0], [7.2, 99.0], [7.3, 99.0], [7.4, 99.0], [7.5, 99.0], [7.6, 99.0], [7.7, 99.0], [7.8, 99.0], [7.9, 99.0], [8.0, 99.0], [8.1, 99.0], [8.2, 99.0], [8.3, 100.0], [8.4, 100.0], [8.5, 100.0], [8.6, 100.0], [8.7, 101.0], [8.8, 101.0], [8.9, 101.0], [9.0, 101.0], [9.1, 101.0], [9.2, 101.0], [9.3, 101.0], [9.4, 101.0], [9.5, 102.0], [9.6, 102.0], [9.7, 102.0], [9.8, 102.0], [9.9, 102.0], [10.0, 102.0], [10.1, 102.0], [10.2, 102.0], [10.3, 102.0], [10.4, 102.0], [10.5, 102.0], [10.6, 102.0], [10.7, 102.0], [10.8, 102.0], [10.9, 102.0], [11.0, 102.0], [11.1, 102.0], [11.2, 102.0], [11.3, 102.0], [11.4, 102.0], [11.5, 103.0], [11.6, 103.0], [11.7, 103.0], [11.8, 103.0], [11.9, 103.0], [12.0, 103.0], [12.1, 103.0], [12.2, 103.0], [12.3, 103.0], [12.4, 103.0], [12.5, 103.0], [12.6, 103.0], [12.7, 104.0], [12.8, 104.0], [12.9, 104.0], [13.0, 104.0], [13.1, 104.0], [13.2, 104.0], [13.3, 104.0], [13.4, 104.0], [13.5, 104.0], [13.6, 104.0], [13.7, 104.0], [13.8, 104.0], [13.9, 104.0], [14.0, 104.0], [14.1, 105.0], [14.2, 105.0], [14.3, 105.0], [14.4, 105.0], [14.5, 107.0], [14.6, 107.0], [14.7, 107.0], [14.8, 107.0], [14.9, 190.0], [15.0, 190.0], [15.1, 191.0], [15.2, 191.0], [15.3, 192.0], [15.4, 192.0], [15.5, 192.0], [15.6, 192.0], [15.7, 192.0], [15.8, 194.0], [15.9, 194.0], [16.0, 194.0], [16.1, 194.0], [16.2, 194.0], [16.3, 194.0], [16.4, 194.0], [16.5, 195.0], [16.6, 195.0], [16.7, 195.0], [16.8, 195.0], [16.9, 195.0], [17.0, 195.0], [17.1, 195.0], [17.2, 195.0], [17.3, 196.0], [17.4, 196.0], [17.5, 197.0], [17.6, 197.0], [17.7, 197.0], [17.8, 197.0], [17.9, 197.0], [18.0, 197.0], [18.1, 198.0], [18.2, 198.0], [18.3, 198.0], [18.4, 198.0], [18.5, 198.0], [18.6, 198.0], [18.7, 198.0], [18.8, 198.0], [18.9, 198.0], [19.0, 198.0], [19.1, 198.0], [19.2, 198.0], [19.3, 198.0], [19.4, 198.0], [19.5, 198.0], [19.6, 198.0], [19.7, 198.0], [19.8, 198.0], [19.9, 199.0], [20.0, 199.0], [20.1, 199.0], [20.2, 199.0], [20.3, 199.0], [20.4, 199.0], [20.5, 199.0], [20.6, 199.0], [20.7, 199.0], [20.8, 199.0], [20.9, 199.0], [21.0, 199.0], [21.1, 199.0], [21.2, 199.0], [21.3, 199.0], [21.4, 199.0], [21.5, 199.0], [21.6, 199.0], [21.7, 199.0], [21.8, 199.0], [21.9, 199.0], [22.0, 199.0], [22.1, 199.0], [22.2, 199.0], [22.3, 199.0], [22.4, 199.0], [22.5, 200.0], [22.6, 200.0], [22.7, 200.0], [22.8, 200.0], [22.9, 200.0], [23.0, 200.0], [23.1, 200.0], [23.2, 200.0], [23.3, 200.0], [23.4, 200.0], [23.5, 200.0], [23.6, 200.0], [23.7, 200.0], [23.8, 200.0], [23.9, 200.0], [24.0, 200.0], [24.1, 200.0], [24.2, 200.0], [24.3, 200.0], [24.4, 200.0], [24.5, 201.0], [24.6, 201.0], [24.7, 201.0], [24.8, 201.0], [24.9, 201.0], [25.0, 201.0], [25.1, 201.0], [25.2, 201.0], [25.3, 201.0], [25.4, 201.0], [25.5, 201.0], [25.6, 201.0], [25.7, 201.0], [25.8, 201.0], [25.9, 201.0], [26.0, 201.0], [26.1, 202.0], [26.2, 202.0], [26.3, 202.0], [26.4, 202.0], [26.5, 202.0], [26.6, 202.0], [26.7, 202.0], [26.8, 202.0], [26.9, 202.0], [27.0, 202.0], [27.1, 202.0], [27.2, 202.0], [27.3, 202.0], [27.4, 202.0], [27.5, 203.0], [27.6, 203.0], [27.7, 203.0], [27.8, 203.0], [27.9, 203.0], [28.0, 203.0], [28.1, 203.0], [28.2, 203.0], [28.3, 203.0], [28.4, 203.0], [28.5, 203.0], [28.6, 203.0], [28.7, 203.0], [28.8, 203.0], [28.9, 203.0], [29.0, 203.0], [29.1, 203.0], [29.2, 203.0], [29.3, 204.0], [29.4, 204.0], [29.5, 204.0], [29.6, 204.0], [29.7, 204.0], [29.8, 204.0], [29.9, 205.0], [30.0, 205.0], [30.1, 205.0], [30.2, 205.0], [30.3, 206.0], [30.4, 206.0], [30.5, 207.0], [30.6, 207.0], [30.7, 207.0], [30.8, 207.0], [30.9, 207.0], [31.0, 207.0], [31.1, 207.0], [31.2, 207.0], [31.3, 208.0], [31.4, 208.0], [31.5, 208.0], [31.6, 208.0], [31.7, 209.0], [31.8, 209.0], [31.9, 214.0], [32.0, 214.0], [32.1, 292.0], [32.2, 292.0], [32.3, 293.0], [32.4, 293.0], [32.5, 294.0], [32.6, 294.0], [32.7, 294.0], [32.8, 294.0], [32.9, 294.0], [33.0, 294.0], [33.1, 294.0], [33.2, 294.0], [33.3, 295.0], [33.4, 295.0], [33.5, 295.0], [33.6, 295.0], [33.7, 295.0], [33.8, 295.0], [33.9, 296.0], [34.0, 296.0], [34.1, 296.0], [34.2, 296.0], [34.3, 296.0], [34.4, 296.0], [34.5, 296.0], [34.6, 296.0], [34.7, 296.0], [34.8, 296.0], [34.9, 296.0], [35.0, 296.0], [35.1, 297.0], [35.2, 297.0], [35.3, 297.0], [35.4, 297.0], [35.5, 297.0], [35.6, 297.0], [35.7, 297.0], [35.8, 297.0], [35.9, 297.0], [36.0, 297.0], [36.1, 298.0], [36.2, 298.0], [36.3, 298.0], [36.4, 298.0], [36.5, 299.0], [36.6, 299.0], [36.7, 299.0], [36.8, 299.0], [36.9, 299.0], [37.0, 299.0], [37.1, 299.0], [37.2, 299.0], [37.3, 299.0], [37.4, 299.0], [37.5, 299.0], [37.6, 299.0], [37.7, 299.0], [37.8, 299.0], [37.9, 300.0], [38.0, 300.0], [38.1, 300.0], [38.2, 300.0], [38.3, 301.0], [38.4, 301.0], [38.5, 301.0], [38.6, 301.0], [38.7, 301.0], [38.8, 301.0], [38.9, 301.0], [39.0, 301.0], [39.1, 301.0], [39.2, 301.0], [39.3, 301.0], [39.4, 301.0], [39.5, 301.0], [39.6, 301.0], [39.7, 301.0], [39.8, 301.0], [39.9, 301.0], [40.0, 301.0], [40.1, 301.0], [40.2, 301.0], [40.3, 301.0], [40.4, 301.0], [40.5, 302.0], [40.6, 302.0], [40.7, 302.0], [40.8, 302.0], [40.9, 302.0], [41.0, 302.0], [41.1, 303.0], [41.2, 303.0], [41.3, 303.0], [41.4, 303.0], [41.5, 303.0], [41.6, 303.0], [41.7, 303.0], [41.8, 303.0], [41.9, 303.0], [42.0, 303.0], [42.1, 303.0], [42.2, 303.0], [42.3, 303.0], [42.4, 303.0], [42.5, 304.0], [42.6, 304.0], [42.7, 304.0], [42.8, 304.0], [42.9, 304.0], [43.0, 304.0], [43.1, 304.0], [43.2, 304.0], [43.3, 304.0], [43.4, 304.0], [43.5, 305.0], [43.6, 305.0], [43.7, 305.0], [43.8, 305.0], [43.9, 305.0], [44.0, 305.0], [44.1, 305.0], [44.2, 305.0], [44.3, 305.0], [44.4, 305.0], [44.5, 306.0], [44.6, 306.0], [44.7, 306.0], [44.8, 306.0], [44.9, 306.0], [45.0, 306.0], [45.1, 308.0], [45.2, 308.0], [45.3, 389.0], [45.4, 389.0], [45.5, 391.0], [45.6, 391.0], [45.7, 392.0], [45.8, 392.0], [45.9, 392.0], [46.0, 392.0], [46.1, 393.0], [46.2, 393.0], [46.3, 394.0], [46.4, 394.0], [46.5, 394.0], [46.6, 394.0], [46.7, 394.0], [46.8, 394.0], [46.9, 394.0], [47.0, 394.0], [47.1, 395.0], [47.2, 395.0], [47.3, 395.0], [47.4, 395.0], [47.5, 396.0], [47.6, 396.0], [47.7, 396.0], [47.8, 396.0], [47.9, 396.0], [48.0, 396.0], [48.1, 396.0], [48.2, 396.0], [48.3, 396.0], [48.4, 396.0], [48.5, 397.0], [48.6, 397.0], [48.7, 397.0], [48.8, 397.0], [48.9, 398.0], [49.0, 398.0], [49.1, 398.0], [49.2, 398.0], [49.3, 398.0], [49.4, 398.0], [49.5, 398.0], [49.6, 398.0], [49.7, 398.0], [49.8, 398.0], [49.9, 398.0], [50.0, 398.0], [50.1, 399.0], [50.2, 399.0], [50.3, 399.0], [50.4, 399.0], [50.5, 399.0], [50.6, 399.0], [50.7, 399.0], [50.8, 399.0], [50.9, 399.0], [51.0, 399.0], [51.1, 399.0], [51.2, 399.0], [51.3, 399.0], [51.4, 399.0], [51.5, 399.0], [51.6, 399.0], [51.7, 399.0], [51.8, 399.0], [51.9, 399.0], [52.0, 399.0], [52.1, 399.0], [52.2, 399.0], [52.3, 400.0], [52.4, 400.0], [52.5, 400.0], [52.6, 400.0], [52.7, 400.0], [52.8, 400.0], [52.9, 400.0], [53.0, 400.0], [53.1, 400.0], [53.2, 400.0], [53.3, 401.0], [53.4, 401.0], [53.5, 401.0], [53.6, 401.0], [53.7, 401.0], [53.8, 401.0], [53.9, 401.0], [54.0, 401.0], [54.1, 401.0], [54.2, 401.0], [54.3, 401.0], [54.4, 401.0], [54.5, 401.0], [54.6, 401.0], [54.7, 401.0], [54.8, 401.0], [54.9, 402.0], [55.0, 402.0], [55.1, 402.0], [55.2, 402.0], [55.3, 402.0], [55.4, 402.0], [55.5, 402.0], [55.6, 402.0], [55.7, 402.0], [55.8, 402.0], [55.9, 402.0], [56.0, 402.0], [56.1, 402.0], [56.2, 402.0], [56.3, 403.0], [56.4, 403.0], [56.5, 403.0], [56.6, 403.0], [56.7, 403.0], [56.8, 403.0], [56.9, 403.0], [57.0, 403.0], [57.1, 403.0], [57.2, 403.0], [57.3, 403.0], [57.4, 403.0], [57.5, 403.0], [57.6, 403.0], [57.7, 404.0], [57.8, 404.0], [57.9, 404.0], [58.0, 404.0], [58.1, 405.0], [58.2, 405.0], [58.3, 405.0], [58.4, 405.0], [58.5, 411.0], [58.6, 411.0], [58.7, 493.0], [58.8, 493.0], [58.9, 493.0], [59.0, 493.0], [59.1, 494.0], [59.2, 494.0], [59.3, 494.0], [59.4, 494.0], [59.5, 495.0], [59.6, 495.0], [59.7, 495.0], [59.8, 495.0], [59.9, 495.0], [60.0, 495.0], [60.1, 496.0], [60.2, 496.0], [60.3, 497.0], [60.4, 497.0], [60.5, 497.0], [60.6, 497.0], [60.7, 498.0], [60.8, 498.0], [60.9, 498.0], [61.0, 498.0], [61.1, 498.0], [61.2, 498.0], [61.3, 498.0], [61.4, 498.0], [61.5, 499.0], [61.6, 499.0], [61.7, 499.0], [61.8, 499.0], [61.9, 499.0], [62.0, 499.0], [62.1, 499.0], [62.2, 499.0], [62.3, 499.0], [62.4, 499.0], [62.5, 500.0], [62.6, 500.0], [62.7, 500.0], [62.8, 500.0], [62.9, 500.0], [63.0, 500.0], [63.1, 500.0], [63.2, 500.0], [63.3, 500.0], [63.4, 500.0], [63.5, 501.0], [63.6, 501.0], [63.7, 501.0], [63.8, 501.0], [63.9, 502.0], [64.0, 502.0], [64.1, 502.0], [64.2, 502.0], [64.3, 502.0], [64.4, 502.0], [64.5, 502.0], [64.6, 502.0], [64.7, 502.0], [64.8, 502.0], [64.9, 503.0], [65.0, 503.0], [65.1, 503.0], [65.2, 503.0], [65.3, 503.0], [65.4, 503.0], [65.5, 503.0], [65.6, 503.0], [65.7, 503.0], [65.8, 503.0], [65.9, 503.0], [66.0, 503.0], [66.1, 503.0], [66.2, 503.0], [66.3, 503.0], [66.4, 504.0], [66.5, 504.0], [66.6, 504.0], [66.7, 505.0], [66.8, 505.0], [66.9, 514.0], [67.0, 514.0], [67.1, 586.0], [67.2, 586.0], [67.3, 588.0], [67.4, 588.0], [67.5, 590.0], [67.6, 590.0], [67.7, 591.0], [67.8, 591.0], [67.9, 593.0], [68.0, 593.0], [68.1, 593.0], [68.2, 593.0], [68.3, 594.0], [68.4, 594.0], [68.5, 594.0], [68.6, 594.0], [68.7, 595.0], [68.8, 595.0], [68.9, 595.0], [69.0, 595.0], [69.1, 596.0], [69.2, 596.0], [69.3, 596.0], [69.4, 596.0], [69.5, 596.0], [69.6, 596.0], [69.7, 596.0], [69.8, 596.0], [69.9, 596.0], [70.0, 596.0], [70.1, 596.0], [70.2, 596.0], [70.3, 597.0], [70.4, 597.0], [70.5, 597.0], [70.6, 597.0], [70.7, 597.0], [70.8, 597.0], [70.9, 597.0], [71.0, 597.0], [71.1, 597.0], [71.2, 597.0], [71.3, 597.0], [71.4, 597.0], [71.5, 598.0], [71.6, 598.0], [71.7, 598.0], [71.8, 598.0], [71.9, 598.0], [72.0, 598.0], [72.1, 598.0], [72.2, 598.0], [72.3, 599.0], [72.4, 599.0], [72.5, 599.0], [72.6, 599.0], [72.7, 600.0], [72.8, 600.0], [72.9, 600.0], [73.0, 600.0], [73.1, 601.0], [73.2, 601.0], [73.3, 601.0], [73.4, 601.0], [73.5, 601.0], [73.6, 601.0], [73.7, 601.0], [73.8, 601.0], [73.9, 602.0], [74.0, 602.0], [74.1, 602.0], [74.2, 602.0], [74.3, 602.0], [74.4, 602.0], [74.5, 603.0], [74.6, 603.0], [74.7, 603.0], [74.8, 603.0], [74.9, 604.0], [75.0, 604.0], [75.1, 605.0], [75.2, 605.0], [75.3, 608.0], [75.4, 608.0], [75.5, 611.0], [75.6, 611.0], [75.7, 693.0], [75.8, 693.0], [75.9, 695.0], [76.0, 695.0], [76.1, 696.0], [76.2, 696.0], [76.3, 696.0], [76.4, 696.0], [76.5, 696.0], [76.6, 696.0], [76.7, 696.0], [76.8, 696.0], [76.9, 697.0], [77.0, 697.0], [77.1, 697.0], [77.2, 697.0], [77.3, 697.0], [77.4, 697.0], [77.5, 698.0], [77.6, 698.0], [77.7, 698.0], [77.8, 698.0], [77.9, 698.0], [78.0, 698.0], [78.1, 698.0], [78.2, 698.0], [78.3, 698.0], [78.4, 698.0], [78.5, 699.0], [78.6, 699.0], [78.7, 699.0], [78.8, 699.0], [78.9, 699.0], [79.0, 699.0], [79.1, 700.0], [79.2, 700.0], [79.3, 700.0], [79.4, 700.0], [79.5, 700.0], [79.6, 700.0], [79.7, 701.0], [79.8, 701.0], [79.9, 701.0], [80.0, 701.0], [80.1, 701.0], [80.2, 701.0], [80.3, 701.0], [80.4, 701.0], [80.5, 702.0], [80.6, 702.0], [80.7, 702.0], [80.8, 702.0], [80.9, 702.0], [81.0, 702.0], [81.1, 703.0], [81.2, 703.0], [81.3, 794.0], [81.4, 794.0], [81.5, 795.0], [81.6, 795.0], [81.7, 795.0], [81.8, 795.0], [81.9, 796.0], [82.0, 796.0], [82.1, 798.0], [82.2, 798.0], [82.3, 798.0], [82.4, 798.0], [82.5, 799.0], [82.6, 799.0], [82.7, 799.0], [82.8, 799.0], [82.9, 800.0], [83.0, 800.0], [83.1, 801.0], [83.2, 801.0], [83.3, 802.0], [83.4, 802.0], [83.5, 804.0], [83.6, 804.0], [83.7, 806.0], [83.8, 806.0], [83.9, 806.0], [84.0, 806.0], [84.1, 893.0], [84.2, 893.0], [84.3, 894.0], [84.4, 894.0], [84.5, 895.0], [84.6, 895.0], [84.7, 897.0], [84.8, 897.0], [84.9, 897.0], [85.0, 897.0], [85.1, 897.0], [85.2, 897.0], [85.3, 897.0], [85.4, 897.0], [85.5, 898.0], [85.6, 898.0], [85.7, 898.0], [85.8, 898.0], [85.9, 898.0], [86.0, 898.0], [86.1, 899.0], [86.2, 899.0], [86.3, 899.0], [86.4, 899.0], [86.5, 900.0], [86.6, 900.0], [86.7, 900.0], [86.8, 900.0], [86.9, 900.0], [87.0, 900.0], [87.1, 901.0], [87.2, 901.0], [87.3, 902.0], [87.4, 902.0], [87.5, 903.0], [87.6, 903.0], [87.7, 903.0], [87.8, 903.0], [87.9, 905.0], [88.0, 905.0], [88.1, 905.0], [88.2, 905.0], [88.3, 907.0], [88.4, 907.0], [88.5, 998.0], [88.6, 998.0], [88.7, 999.0], [88.8, 999.0], [88.9, 1000.0], [89.0, 1000.0], [89.1, 1000.0], [89.2, 1000.0], [89.3, 1001.0], [89.4, 1001.0], [89.5, 1004.0], [89.6, 1004.0], [89.7, 1094.0], [89.8, 1094.0], [89.9, 1094.0], [90.0, 1094.0], [90.1, 1095.0], [90.2, 1095.0], [90.3, 1095.0], [90.4, 1095.0], [90.5, 1097.0], [90.6, 1097.0], [90.7, 1098.0], [90.8, 1098.0], [90.9, 1098.0], [91.0, 1098.0], [91.1, 1099.0], [91.2, 1099.0], [91.3, 1100.0], [91.4, 1100.0], [91.5, 1100.0], [91.6, 1100.0], [91.7, 1102.0], [91.8, 1102.0], [91.9, 1105.0], [92.0, 1105.0], [92.1, 1195.0], [92.2, 1195.0], [92.3, 1196.0], [92.4, 1196.0], [92.5, 1197.0], [92.6, 1197.0], [92.7, 1198.0], [92.8, 1198.0], [92.9, 1198.0], [93.0, 1198.0], [93.1, 1199.0], [93.2, 1199.0], [93.3, 1200.0], [93.4, 1200.0], [93.5, 1202.0], [93.6, 1202.0], [93.7, 1202.0], [93.8, 1202.0], [93.9, 1296.0], [94.0, 1296.0], [94.1, 1297.0], [94.2, 1297.0], [94.3, 1297.0], [94.4, 1297.0], [94.5, 1301.0], [94.6, 1301.0], [94.7, 1400.0], [94.8, 1400.0], [94.9, 1487.0], [95.0, 1487.0], [95.1, 1597.0], [95.2, 1597.0], [95.3, 1693.0], [95.4, 1693.0], [95.5, 1794.0], [95.6, 1794.0], [95.7, 1896.0], [95.8, 1896.0], [95.9, 1900.0], [96.0, 1900.0], [96.1, 1997.0], [96.2, 1997.0], [96.3, 2094.0], [96.4, 2094.0], [96.5, 2100.0], [96.6, 2100.0], [96.7, 2100.0], [96.8, 2100.0], [96.9, 2200.0], [97.0, 2200.0], [97.1, 3599.0], [97.2, 3599.0], [97.3, 4544.0], [97.4, 4544.0], [97.5, 4564.0], [97.6, 4564.0], [97.7, 4882.0], [97.8, 4882.0], [97.9, 4925.0], [98.0, 4925.0], [98.1, 5042.0], [98.2, 5042.0], [98.3, 5234.0], [98.4, 5234.0], [98.5, 5345.0], [98.6, 5345.0], [98.7, 5401.0], [98.8, 5401.0], [98.9, 5410.0], [99.0, 5410.0], [99.1, 5443.0], [99.2, 5443.0], [99.3, 5444.0], [99.4, 5444.0], [99.5, 5445.0], [99.6, 5445.0], [99.7, 5463.0], [99.8, 5463.0], [99.9, 5494.0], [100.0, 5494.0]], "isOverall": false, "label": "query-2", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 3.0], [1.1, 3.0], [1.2, 3.0], [1.3, 3.0], [1.4, 3.0], [1.5, 3.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 4.0], [3.0, 4.0], [3.1, 4.0], [3.2, 4.0], [3.3, 4.0], [3.4, 4.0], [3.5, 4.0], [3.6, 5.0], [3.7, 5.0], [3.8, 5.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 6.0], [4.3, 6.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 82.0], [4.8, 82.0], [4.9, 90.0], [5.0, 90.0], [5.1, 90.0], [5.2, 90.0], [5.3, 95.0], [5.4, 95.0], [5.5, 95.0], [5.6, 95.0], [5.7, 96.0], [5.8, 96.0], [5.9, 96.0], [6.0, 96.0], [6.1, 97.0], [6.2, 97.0], [6.3, 98.0], [6.4, 98.0], [6.5, 98.0], [6.6, 98.0], [6.7, 98.0], [6.8, 98.0], [6.9, 99.0], [7.0, 99.0], [7.1, 99.0], [7.2, 99.0], [7.3, 99.0], [7.4, 99.0], [7.5, 99.0], [7.6, 99.0], [7.7, 99.0], [7.8, 99.0], [7.9, 99.0], [8.0, 99.0], [8.1, 99.0], [8.2, 99.0], [8.3, 99.0], [8.4, 99.0], [8.5, 100.0], [8.6, 100.0], [8.7, 100.0], [8.8, 100.0], [8.9, 100.0], [9.0, 100.0], [9.1, 100.0], [9.2, 100.0], [9.3, 100.0], [9.4, 100.0], [9.5, 100.0], [9.6, 100.0], [9.7, 100.0], [9.8, 100.0], [9.9, 101.0], [10.0, 101.0], [10.1, 101.0], [10.2, 101.0], [10.3, 101.0], [10.4, 101.0], [10.5, 101.0], [10.6, 101.0], [10.7, 101.0], [10.8, 101.0], [10.9, 101.0], [11.0, 101.0], [11.1, 101.0], [11.2, 101.0], [11.3, 101.0], [11.4, 101.0], [11.5, 102.0], [11.6, 102.0], [11.7, 102.0], [11.8, 102.0], [11.9, 102.0], [12.0, 102.0], [12.1, 102.0], [12.2, 102.0], [12.3, 102.0], [12.4, 102.0], [12.5, 102.0], [12.6, 102.0], [12.7, 102.0], [12.8, 102.0], [12.9, 103.0], [13.0, 103.0], [13.1, 103.0], [13.2, 103.0], [13.3, 103.0], [13.4, 103.0], [13.5, 103.0], [13.6, 103.0], [13.7, 103.0], [13.8, 103.0], [13.9, 103.0], [14.0, 103.0], [14.1, 104.0], [14.2, 104.0], [14.3, 104.0], [14.4, 104.0], [14.5, 104.0], [14.6, 104.0], [14.7, 104.0], [14.8, 104.0], [14.9, 105.0], [15.0, 105.0], [15.1, 105.0], [15.2, 105.0], [15.3, 105.0], [15.4, 105.0], [15.5, 106.0], [15.6, 106.0], [15.7, 106.0], [15.8, 106.0], [15.9, 106.0], [16.0, 106.0], [16.1, 107.0], [16.2, 107.0], [16.3, 107.0], [16.4, 107.0], [16.5, 108.0], [16.6, 194.0], [16.7, 194.0], [16.8, 194.0], [16.9, 194.0], [17.0, 195.0], [17.1, 195.0], [17.2, 195.0], [17.3, 195.0], [17.4, 195.0], [17.5, 195.0], [17.6, 195.0], [17.7, 195.0], [17.8, 195.0], [17.9, 195.0], [18.0, 195.0], [18.1, 195.0], [18.2, 196.0], [18.3, 196.0], [18.4, 196.0], [18.5, 196.0], [18.6, 197.0], [18.7, 197.0], [18.8, 197.0], [18.9, 197.0], [19.0, 197.0], [19.1, 197.0], [19.2, 198.0], [19.3, 198.0], [19.4, 198.0], [19.5, 198.0], [19.6, 198.0], [19.7, 198.0], [19.8, 198.0], [19.9, 198.0], [20.0, 198.0], [20.1, 198.0], [20.2, 198.0], [20.3, 198.0], [20.4, 198.0], [20.5, 198.0], [20.6, 198.0], [20.7, 198.0], [20.8, 198.0], [20.9, 198.0], [21.0, 198.0], [21.1, 198.0], [21.2, 199.0], [21.3, 199.0], [21.4, 199.0], [21.5, 199.0], [21.6, 199.0], [21.7, 199.0], [21.8, 199.0], [21.9, 199.0], [22.0, 199.0], [22.1, 199.0], [22.2, 199.0], [22.3, 199.0], [22.4, 200.0], [22.5, 200.0], [22.6, 200.0], [22.7, 200.0], [22.8, 200.0], [22.9, 200.0], [23.0, 200.0], [23.1, 200.0], [23.2, 200.0], [23.3, 200.0], [23.4, 201.0], [23.5, 201.0], [23.6, 201.0], [23.7, 201.0], [23.8, 201.0], [23.9, 201.0], [24.0, 201.0], [24.1, 201.0], [24.2, 201.0], [24.3, 201.0], [24.4, 201.0], [24.5, 201.0], [24.6, 201.0], [24.7, 201.0], [24.8, 201.0], [24.9, 201.0], [25.0, 201.0], [25.1, 201.0], [25.2, 202.0], [25.3, 202.0], [25.4, 202.0], [25.5, 202.0], [25.6, 202.0], [25.7, 202.0], [25.8, 202.0], [25.9, 202.0], [26.0, 202.0], [26.1, 202.0], [26.2, 202.0], [26.3, 202.0], [26.4, 202.0], [26.5, 202.0], [26.6, 202.0], [26.7, 202.0], [26.8, 202.0], [26.9, 202.0], [27.0, 202.0], [27.1, 202.0], [27.2, 202.0], [27.3, 202.0], [27.4, 202.0], [27.5, 202.0], [27.6, 202.0], [27.7, 202.0], [27.8, 203.0], [27.9, 203.0], [28.0, 203.0], [28.1, 203.0], [28.2, 203.0], [28.3, 203.0], [28.4, 203.0], [28.5, 204.0], [28.6, 204.0], [28.7, 204.0], [28.8, 204.0], [28.9, 204.0], [29.0, 204.0], [29.1, 204.0], [29.2, 204.0], [29.3, 205.0], [29.4, 205.0], [29.5, 205.0], [29.6, 205.0], [29.7, 205.0], [29.8, 205.0], [29.9, 206.0], [30.0, 206.0], [30.1, 206.0], [30.2, 206.0], [30.3, 206.0], [30.4, 206.0], [30.5, 206.0], [30.6, 206.0], [30.7, 206.0], [30.8, 206.0], [30.9, 210.0], [31.0, 210.0], [31.1, 214.0], [31.2, 214.0], [31.3, 292.0], [31.4, 292.0], [31.5, 292.0], [31.6, 292.0], [31.7, 292.0], [31.8, 292.0], [31.9, 292.0], [32.0, 293.0], [32.1, 293.0], [32.2, 293.0], [32.3, 293.0], [32.4, 294.0], [32.5, 294.0], [32.6, 294.0], [32.7, 294.0], [32.8, 294.0], [32.9, 294.0], [33.0, 294.0], [33.1, 294.0], [33.2, 294.0], [33.3, 294.0], [33.4, 295.0], [33.5, 295.0], [33.6, 296.0], [33.7, 296.0], [33.8, 296.0], [33.9, 296.0], [34.0, 296.0], [34.1, 296.0], [34.2, 296.0], [34.3, 296.0], [34.4, 297.0], [34.5, 297.0], [34.6, 297.0], [34.7, 297.0], [34.8, 297.0], [34.9, 297.0], [35.0, 298.0], [35.1, 298.0], [35.2, 298.0], [35.3, 298.0], [35.4, 298.0], [35.5, 298.0], [35.6, 298.0], [35.7, 298.0], [35.8, 298.0], [35.9, 298.0], [36.0, 298.0], [36.1, 298.0], [36.2, 299.0], [36.3, 299.0], [36.4, 299.0], [36.5, 299.0], [36.6, 299.0], [36.7, 299.0], [36.8, 299.0], [36.9, 299.0], [37.0, 299.0], [37.1, 299.0], [37.2, 299.0], [37.3, 299.0], [37.4, 299.0], [37.5, 299.0], [37.6, 299.0], [37.7, 299.0], [37.8, 299.0], [37.9, 299.0], [38.0, 300.0], [38.1, 300.0], [38.2, 300.0], [38.3, 300.0], [38.4, 300.0], [38.5, 300.0], [38.6, 300.0], [38.7, 300.0], [38.8, 300.0], [38.9, 300.0], [39.0, 300.0], [39.1, 300.0], [39.2, 300.0], [39.3, 300.0], [39.4, 300.0], [39.5, 300.0], [39.6, 300.0], [39.7, 300.0], [39.8, 300.0], [39.9, 300.0], [40.0, 300.0], [40.1, 300.0], [40.2, 300.0], [40.3, 300.0], [40.4, 301.0], [40.5, 301.0], [40.6, 301.0], [40.7, 301.0], [40.8, 301.0], [40.9, 301.0], [41.0, 301.0], [41.1, 301.0], [41.2, 301.0], [41.3, 301.0], [41.4, 301.0], [41.5, 301.0], [41.6, 301.0], [41.7, 301.0], [41.8, 301.0], [41.9, 301.0], [42.0, 301.0], [42.1, 301.0], [42.2, 301.0], [42.3, 301.0], [42.4, 301.0], [42.5, 301.0], [42.6, 301.0], [42.7, 301.0], [42.8, 301.0], [42.9, 301.0], [43.0, 301.0], [43.1, 301.0], [43.2, 302.0], [43.3, 302.0], [43.4, 302.0], [43.5, 302.0], [43.6, 302.0], [43.7, 302.0], [43.8, 302.0], [43.9, 302.0], [44.0, 302.0], [44.1, 302.0], [44.2, 302.0], [44.3, 302.0], [44.4, 302.0], [44.5, 302.0], [44.6, 302.0], [44.7, 302.0], [44.8, 302.0], [44.9, 302.0], [45.0, 302.0], [45.1, 302.0], [45.2, 302.0], [45.3, 302.0], [45.4, 302.0], [45.5, 302.0], [45.6, 303.0], [45.7, 303.0], [45.8, 303.0], [45.9, 303.0], [46.0, 303.0], [46.1, 303.0], [46.2, 303.0], [46.3, 303.0], [46.4, 303.0], [46.5, 303.0], [46.6, 303.0], [46.7, 303.0], [46.8, 303.0], [46.9, 303.0], [47.0, 304.0], [47.1, 304.0], [47.2, 304.0], [47.3, 304.0], [47.4, 305.0], [47.5, 305.0], [47.6, 305.0], [47.7, 305.0], [47.8, 305.0], [47.9, 305.0], [48.0, 306.0], [48.1, 306.0], [48.2, 306.0], [48.3, 306.0], [48.4, 306.0], [48.5, 306.0], [48.6, 312.0], [48.7, 312.0], [48.8, 318.0], [48.9, 318.0], [49.0, 385.0], [49.1, 385.0], [49.2, 388.0], [49.3, 388.0], [49.4, 388.0], [49.5, 393.0], [49.6, 393.0], [49.7, 393.0], [49.8, 393.0], [49.9, 393.0], [50.0, 393.0], [50.1, 394.0], [50.2, 394.0], [50.3, 395.0], [50.4, 395.0], [50.5, 395.0], [50.6, 395.0], [50.7, 396.0], [50.8, 396.0], [50.9, 396.0], [51.0, 396.0], [51.1, 396.0], [51.2, 396.0], [51.3, 396.0], [51.4, 396.0], [51.5, 396.0], [51.6, 396.0], [51.7, 397.0], [51.8, 397.0], [51.9, 397.0], [52.0, 397.0], [52.1, 397.0], [52.2, 397.0], [52.3, 398.0], [52.4, 398.0], [52.5, 398.0], [52.6, 398.0], [52.7, 399.0], [52.8, 399.0], [52.9, 399.0], [53.0, 399.0], [53.1, 399.0], [53.2, 399.0], [53.3, 399.0], [53.4, 399.0], [53.5, 399.0], [53.6, 399.0], [53.7, 399.0], [53.8, 399.0], [53.9, 400.0], [54.0, 400.0], [54.1, 400.0], [54.2, 400.0], [54.3, 400.0], [54.4, 400.0], [54.5, 400.0], [54.6, 400.0], [54.7, 400.0], [54.8, 400.0], [54.9, 401.0], [55.0, 401.0], [55.1, 401.0], [55.2, 401.0], [55.3, 401.0], [55.4, 401.0], [55.5, 401.0], [55.6, 401.0], [55.7, 401.0], [55.8, 401.0], [55.9, 401.0], [56.0, 401.0], [56.1, 401.0], [56.2, 401.0], [56.3, 402.0], [56.4, 402.0], [56.5, 402.0], [56.6, 402.0], [56.7, 403.0], [56.8, 403.0], [56.9, 403.0], [57.0, 403.0], [57.1, 403.0], [57.2, 403.0], [57.3, 403.0], [57.4, 403.0], [57.5, 403.0], [57.6, 403.0], [57.7, 403.0], [57.8, 403.0], [57.9, 403.0], [58.0, 403.0], [58.1, 403.0], [58.2, 403.0], [58.3, 404.0], [58.4, 404.0], [58.5, 404.0], [58.6, 404.0], [58.7, 404.0], [58.8, 404.0], [58.9, 404.0], [59.0, 404.0], [59.1, 404.0], [59.2, 404.0], [59.3, 404.0], [59.4, 404.0], [59.5, 404.0], [59.6, 404.0], [59.7, 404.0], [59.8, 404.0], [59.9, 405.0], [60.0, 405.0], [60.1, 405.0], [60.2, 405.0], [60.3, 405.0], [60.4, 405.0], [60.5, 405.0], [60.6, 405.0], [60.7, 407.0], [60.8, 407.0], [60.9, 409.0], [61.0, 409.0], [61.1, 412.0], [61.2, 412.0], [61.3, 489.0], [61.4, 489.0], [61.5, 489.0], [61.6, 489.0], [61.7, 491.0], [61.8, 491.0], [61.9, 494.0], [62.0, 494.0], [62.1, 495.0], [62.2, 495.0], [62.3, 495.0], [62.4, 495.0], [62.5, 495.0], [62.6, 495.0], [62.7, 495.0], [62.8, 495.0], [62.9, 496.0], [63.0, 496.0], [63.1, 496.0], [63.2, 496.0], [63.3, 497.0], [63.4, 497.0], [63.5, 497.0], [63.6, 497.0], [63.7, 497.0], [63.8, 497.0], [63.9, 497.0], [64.0, 497.0], [64.1, 498.0], [64.2, 498.0], [64.3, 498.0], [64.4, 498.0], [64.5, 498.0], [64.6, 498.0], [64.7, 498.0], [64.8, 498.0], [64.9, 498.0], [65.0, 498.0], [65.1, 499.0], [65.2, 499.0], [65.3, 499.0], [65.4, 499.0], [65.5, 499.0], [65.6, 499.0], [65.7, 499.0], [65.8, 499.0], [65.9, 499.0], [66.0, 499.0], [66.1, 499.0], [66.2, 499.0], [66.3, 499.0], [66.4, 499.0], [66.5, 499.0], [66.6, 499.0], [66.7, 499.0], [66.8, 499.0], [66.9, 500.0], [67.0, 500.0], [67.1, 500.0], [67.2, 500.0], [67.3, 500.0], [67.4, 500.0], [67.5, 500.0], [67.6, 500.0], [67.7, 500.0], [67.8, 500.0], [67.9, 501.0], [68.0, 501.0], [68.1, 501.0], [68.2, 501.0], [68.3, 501.0], [68.4, 502.0], [68.5, 502.0], [68.6, 502.0], [68.7, 502.0], [68.8, 502.0], [68.9, 502.0], [69.0, 502.0], [69.1, 502.0], [69.2, 502.0], [69.3, 502.0], [69.4, 503.0], [69.5, 503.0], [69.6, 503.0], [69.7, 503.0], [69.8, 503.0], [69.9, 503.0], [70.0, 503.0], [70.1, 503.0], [70.2, 504.0], [70.3, 504.0], [70.4, 504.0], [70.5, 504.0], [70.6, 504.0], [70.7, 504.0], [70.8, 504.0], [70.9, 504.0], [71.0, 504.0], [71.1, 504.0], [71.2, 505.0], [71.3, 505.0], [71.4, 505.0], [71.5, 505.0], [71.6, 505.0], [71.7, 506.0], [71.8, 506.0], [71.9, 512.0], [72.0, 512.0], [72.1, 585.0], [72.2, 585.0], [72.3, 591.0], [72.4, 591.0], [72.5, 593.0], [72.6, 593.0], [72.7, 593.0], [72.8, 593.0], [72.9, 595.0], [73.0, 595.0], [73.1, 595.0], [73.2, 595.0], [73.3, 596.0], [73.4, 596.0], [73.5, 596.0], [73.6, 596.0], [73.7, 596.0], [73.8, 596.0], [73.9, 597.0], [74.0, 597.0], [74.1, 597.0], [74.2, 597.0], [74.3, 597.0], [74.4, 597.0], [74.5, 598.0], [74.6, 598.0], [74.7, 598.0], [74.8, 598.0], [74.9, 598.0], [75.0, 598.0], [75.1, 598.0], [75.2, 598.0], [75.3, 598.0], [75.4, 598.0], [75.5, 598.0], [75.6, 598.0], [75.7, 599.0], [75.8, 599.0], [75.9, 599.0], [76.0, 599.0], [76.1, 599.0], [76.2, 599.0], [76.3, 599.0], [76.4, 599.0], [76.5, 599.0], [76.6, 599.0], [76.7, 599.0], [76.8, 599.0], [76.9, 599.0], [77.0, 599.0], [77.1, 599.0], [77.2, 599.0], [77.3, 601.0], [77.4, 601.0], [77.5, 602.0], [77.6, 602.0], [77.7, 602.0], [77.8, 602.0], [77.9, 603.0], [78.0, 603.0], [78.1, 604.0], [78.2, 604.0], [78.3, 604.0], [78.4, 604.0], [78.5, 605.0], [78.6, 605.0], [78.7, 605.0], [78.8, 605.0], [78.9, 693.0], [79.0, 693.0], [79.1, 694.0], [79.2, 694.0], [79.3, 694.0], [79.4, 694.0], [79.5, 695.0], [79.6, 695.0], [79.7, 695.0], [79.8, 695.0], [79.9, 695.0], [80.0, 695.0], [80.1, 695.0], [80.2, 695.0], [80.3, 696.0], [80.4, 696.0], [80.5, 696.0], [80.6, 696.0], [80.7, 697.0], [80.8, 697.0], [80.9, 698.0], [81.0, 698.0], [81.1, 698.0], [81.2, 698.0], [81.3, 698.0], [81.4, 698.0], [81.5, 699.0], [81.6, 699.0], [81.7, 699.0], [81.8, 699.0], [81.9, 699.0], [82.0, 699.0], [82.1, 699.0], [82.2, 699.0], [82.3, 699.0], [82.4, 699.0], [82.5, 699.0], [82.6, 699.0], [82.7, 699.0], [82.8, 699.0], [82.9, 699.0], [83.0, 699.0], [83.1, 700.0], [83.2, 700.0], [83.3, 700.0], [83.4, 700.0], [83.5, 701.0], [83.6, 701.0], [83.7, 701.0], [83.8, 701.0], [83.9, 701.0], [84.0, 701.0], [84.1, 702.0], [84.2, 702.0], [84.3, 702.0], [84.4, 702.0], [84.5, 702.0], [84.6, 702.0], [84.7, 703.0], [84.8, 703.0], [84.9, 703.0], [85.0, 703.0], [85.1, 704.0], [85.2, 704.0], [85.3, 704.0], [85.4, 704.0], [85.5, 706.0], [85.6, 706.0], [85.7, 706.0], [85.8, 706.0], [85.9, 708.0], [86.0, 708.0], [86.1, 793.0], [86.2, 793.0], [86.3, 795.0], [86.4, 795.0], [86.5, 795.0], [86.6, 795.0], [86.7, 796.0], [86.8, 796.0], [86.9, 797.0], [87.0, 797.0], [87.1, 797.0], [87.2, 797.0], [87.3, 797.0], [87.4, 797.0], [87.5, 797.0], [87.6, 797.0], [87.7, 798.0], [87.8, 798.0], [87.9, 798.0], [88.0, 798.0], [88.1, 798.0], [88.2, 798.0], [88.3, 798.0], [88.4, 798.0], [88.5, 799.0], [88.6, 799.0], [88.7, 800.0], [88.8, 800.0], [88.9, 803.0], [89.0, 803.0], [89.1, 894.0], [89.2, 894.0], [89.3, 894.0], [89.4, 894.0], [89.5, 894.0], [89.6, 894.0], [89.7, 895.0], [89.8, 895.0], [89.9, 895.0], [90.0, 895.0], [90.1, 896.0], [90.2, 896.0], [90.3, 897.0], [90.4, 897.0], [90.5, 898.0], [90.6, 898.0], [90.7, 898.0], [90.8, 898.0], [90.9, 900.0], [91.0, 900.0], [91.1, 904.0], [91.2, 904.0], [91.3, 905.0], [91.4, 905.0], [91.5, 906.0], [91.6, 906.0], [91.7, 996.0], [91.8, 996.0], [91.9, 996.0], [92.0, 996.0], [92.1, 996.0], [92.2, 996.0], [92.3, 997.0], [92.4, 997.0], [92.5, 997.0], [92.6, 997.0], [92.7, 997.0], [92.8, 997.0], [92.9, 1001.0], [93.0, 1001.0], [93.1, 1002.0], [93.2, 1002.0], [93.3, 1094.0], [93.4, 1094.0], [93.5, 1095.0], [93.6, 1095.0], [93.7, 1096.0], [93.8, 1096.0], [93.9, 1098.0], [94.0, 1098.0], [94.1, 1100.0], [94.2, 1100.0], [94.3, 1109.0], [94.4, 1109.0], [94.5, 1193.0], [94.6, 1193.0], [94.7, 1194.0], [94.8, 1194.0], [94.9, 1195.0], [95.0, 1195.0], [95.1, 1198.0], [95.2, 1198.0], [95.3, 1295.0], [95.4, 1295.0], [95.5, 1296.0], [95.6, 1296.0], [95.7, 1297.0], [95.8, 1297.0], [95.9, 1395.0], [96.0, 1395.0], [96.1, 1398.0], [96.2, 1398.0], [96.3, 1596.0], [96.4, 1596.0], [96.5, 1696.0], [96.6, 1696.0], [96.7, 1698.0], [96.8, 1698.0], [96.9, 1799.0], [97.0, 1799.0], [97.1, 1901.0], [97.2, 1901.0], [97.3, 1997.0], [97.4, 1997.0], [97.5, 2195.0], [97.6, 2195.0], [97.7, 2397.0], [97.8, 2397.0], [97.9, 2897.0], [98.0, 2897.0], [98.1, 4455.0], [98.2, 4455.0], [98.3, 4766.0], [98.4, 4766.0], [98.5, 4804.0], [98.6, 4804.0], [98.7, 4923.0], [98.8, 4923.0], [98.9, 4961.0], [99.0, 4961.0], [99.1, 4984.0], [99.2, 4984.0], [99.3, 5174.0], [99.4, 5174.0], [99.5, 5402.0], [99.6, 5402.0], [99.7, 5520.0], [99.8, 5520.0], [99.9, 5565.0], [100.0, 5565.0]], "isOverall": false, "label": "query-3", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 4.0], [0.3, 4.0], [0.4, 6.0], [0.5, 6.0], [0.6, 6.0], [0.7, 6.0], [0.8, 98.0], [0.9, 98.0], [1.0, 100.0], [1.1, 100.0], [1.2, 101.0], [1.3, 101.0], [1.4, 101.0], [1.5, 101.0], [1.6, 102.0], [1.7, 102.0], [1.8, 103.0], [1.9, 103.0], [2.0, 103.0], [2.1, 103.0], [2.2, 105.0], [2.3, 105.0], [2.4, 105.0], [2.5, 105.0], [2.6, 106.0], [2.7, 106.0], [2.8, 106.0], [2.9, 107.0], [3.0, 107.0], [3.1, 196.0], [3.2, 196.0], [3.3, 198.0], [3.4, 198.0], [3.5, 199.0], [3.6, 199.0], [3.7, 200.0], [3.8, 200.0], [3.9, 200.0], [4.0, 200.0], [4.1, 201.0], [4.2, 201.0], [4.3, 201.0], [4.4, 201.0], [4.5, 201.0], [4.6, 201.0], [4.7, 202.0], [4.8, 202.0], [4.9, 202.0], [5.0, 202.0], [5.1, 203.0], [5.2, 203.0], [5.3, 207.0], [5.4, 207.0], [5.5, 208.0], [5.6, 208.0], [5.7, 293.0], [5.8, 293.0], [5.9, 293.0], [6.0, 293.0], [6.1, 293.0], [6.2, 293.0], [6.3, 295.0], [6.4, 295.0], [6.5, 296.0], [6.6, 296.0], [6.7, 298.0], [6.8, 298.0], [6.9, 299.0], [7.0, 299.0], [7.1, 299.0], [7.2, 299.0], [7.3, 299.0], [7.4, 299.0], [7.5, 299.0], [7.6, 299.0], [7.7, 300.0], [7.8, 300.0], [7.9, 300.0], [8.0, 300.0], [8.1, 300.0], [8.2, 300.0], [8.3, 302.0], [8.4, 304.0], [8.5, 304.0], [8.6, 304.0], [8.7, 304.0], [8.8, 305.0], [8.9, 305.0], [9.0, 306.0], [9.1, 306.0], [9.2, 307.0], [9.3, 307.0], [9.4, 307.0], [9.5, 307.0], [9.6, 307.0], [9.7, 307.0], [9.8, 308.0], [9.9, 308.0], [10.0, 388.0], [10.1, 388.0], [10.2, 394.0], [10.3, 394.0], [10.4, 396.0], [10.5, 396.0], [10.6, 396.0], [10.7, 396.0], [10.8, 396.0], [10.9, 396.0], [11.0, 398.0], [11.1, 398.0], [11.2, 399.0], [11.3, 399.0], [11.4, 399.0], [11.5, 399.0], [11.6, 399.0], [11.7, 399.0], [11.8, 399.0], [11.9, 399.0], [12.0, 399.0], [12.1, 399.0], [12.2, 399.0], [12.3, 399.0], [12.4, 401.0], [12.5, 401.0], [12.6, 401.0], [12.7, 401.0], [12.8, 401.0], [12.9, 401.0], [13.0, 403.0], [13.1, 403.0], [13.2, 403.0], [13.3, 403.0], [13.4, 404.0], [13.5, 404.0], [13.6, 404.0], [13.7, 404.0], [13.8, 405.0], [13.9, 405.0], [14.0, 407.0], [14.1, 407.0], [14.2, 407.0], [14.3, 407.0], [14.4, 494.0], [14.5, 494.0], [14.6, 495.0], [14.7, 495.0], [14.8, 496.0], [14.9, 496.0], [15.0, 497.0], [15.1, 497.0], [15.2, 497.0], [15.3, 497.0], [15.4, 498.0], [15.5, 498.0], [15.6, 498.0], [15.7, 498.0], [15.8, 499.0], [15.9, 499.0], [16.0, 499.0], [16.1, 499.0], [16.2, 499.0], [16.3, 499.0], [16.4, 499.0], [16.5, 499.0], [16.6, 499.0], [16.7, 499.0], [16.8, 500.0], [16.9, 500.0], [17.0, 500.0], [17.1, 500.0], [17.2, 500.0], [17.3, 500.0], [17.4, 500.0], [17.5, 500.0], [17.6, 501.0], [17.7, 501.0], [17.8, 501.0], [17.9, 501.0], [18.0, 502.0], [18.1, 502.0], [18.2, 502.0], [18.3, 502.0], [18.4, 502.0], [18.5, 502.0], [18.6, 503.0], [18.7, 503.0], [18.8, 503.0], [18.9, 503.0], [19.0, 503.0], [19.1, 503.0], [19.2, 504.0], [19.3, 504.0], [19.4, 504.0], [19.5, 504.0], [19.6, 505.0], [19.7, 505.0], [19.8, 594.0], [19.9, 594.0], [20.0, 595.0], [20.1, 595.0], [20.2, 595.0], [20.3, 595.0], [20.4, 596.0], [20.5, 596.0], [20.6, 596.0], [20.7, 596.0], [20.8, 596.0], [20.9, 596.0], [21.0, 596.0], [21.1, 596.0], [21.2, 597.0], [21.3, 597.0], [21.4, 598.0], [21.5, 598.0], [21.6, 598.0], [21.7, 598.0], [21.8, 599.0], [21.9, 599.0], [22.0, 599.0], [22.1, 599.0], [22.2, 599.0], [22.3, 599.0], [22.4, 600.0], [22.5, 600.0], [22.6, 600.0], [22.7, 600.0], [22.8, 600.0], [22.9, 600.0], [23.0, 600.0], [23.1, 600.0], [23.2, 601.0], [23.3, 601.0], [23.4, 601.0], [23.5, 601.0], [23.6, 602.0], [23.7, 602.0], [23.8, 602.0], [23.9, 602.0], [24.0, 603.0], [24.1, 603.0], [24.2, 603.0], [24.3, 603.0], [24.4, 604.0], [24.5, 604.0], [24.6, 604.0], [24.7, 604.0], [24.8, 604.0], [24.9, 604.0], [25.0, 604.0], [25.1, 604.0], [25.2, 606.0], [25.3, 606.0], [25.4, 607.0], [25.5, 607.0], [25.6, 693.0], [25.7, 693.0], [25.8, 694.0], [25.9, 694.0], [26.0, 696.0], [26.1, 696.0], [26.2, 696.0], [26.3, 696.0], [26.4, 696.0], [26.5, 696.0], [26.6, 696.0], [26.7, 696.0], [26.8, 697.0], [26.9, 697.0], [27.0, 697.0], [27.1, 697.0], [27.2, 697.0], [27.3, 697.0], [27.4, 698.0], [27.5, 698.0], [27.6, 698.0], [27.7, 698.0], [27.8, 698.0], [27.9, 698.0], [28.0, 698.0], [28.1, 698.0], [28.2, 698.0], [28.3, 698.0], [28.4, 698.0], [28.5, 698.0], [28.6, 699.0], [28.7, 699.0], [28.8, 699.0], [28.9, 699.0], [29.0, 699.0], [29.1, 699.0], [29.2, 699.0], [29.3, 699.0], [29.4, 700.0], [29.5, 700.0], [29.6, 700.0], [29.7, 700.0], [29.8, 701.0], [29.9, 701.0], [30.0, 701.0], [30.1, 701.0], [30.2, 701.0], [30.3, 701.0], [30.4, 702.0], [30.5, 702.0], [30.6, 702.0], [30.7, 702.0], [30.8, 703.0], [30.9, 703.0], [31.0, 704.0], [31.1, 704.0], [31.2, 704.0], [31.3, 704.0], [31.4, 704.0], [31.5, 704.0], [31.6, 705.0], [31.7, 705.0], [31.8, 707.0], [31.9, 707.0], [32.0, 710.0], [32.1, 710.0], [32.2, 791.0], [32.3, 791.0], [32.4, 793.0], [32.5, 793.0], [32.6, 793.0], [32.7, 793.0], [32.8, 794.0], [32.9, 794.0], [33.0, 796.0], [33.1, 796.0], [33.2, 797.0], [33.3, 797.0], [33.4, 798.0], [33.5, 798.0], [33.6, 798.0], [33.7, 798.0], [33.8, 798.0], [33.9, 798.0], [34.0, 799.0], [34.1, 799.0], [34.2, 799.0], [34.3, 799.0], [34.4, 799.0], [34.5, 799.0], [34.6, 800.0], [34.7, 800.0], [34.8, 800.0], [34.9, 801.0], [35.0, 801.0], [35.1, 801.0], [35.2, 801.0], [35.3, 801.0], [35.4, 801.0], [35.5, 801.0], [35.6, 801.0], [35.7, 801.0], [35.8, 801.0], [35.9, 802.0], [36.0, 802.0], [36.1, 802.0], [36.2, 802.0], [36.3, 802.0], [36.4, 802.0], [36.5, 803.0], [36.6, 803.0], [36.7, 803.0], [36.8, 803.0], [36.9, 803.0], [37.0, 803.0], [37.1, 804.0], [37.2, 804.0], [37.3, 805.0], [37.4, 805.0], [37.5, 805.0], [37.6, 805.0], [37.7, 888.0], [37.8, 888.0], [37.9, 893.0], [38.0, 893.0], [38.1, 894.0], [38.2, 894.0], [38.3, 895.0], [38.4, 895.0], [38.5, 896.0], [38.6, 896.0], [38.7, 896.0], [38.8, 896.0], [38.9, 896.0], [39.0, 896.0], [39.1, 896.0], [39.2, 896.0], [39.3, 896.0], [39.4, 896.0], [39.5, 897.0], [39.6, 897.0], [39.7, 897.0], [39.8, 897.0], [39.9, 898.0], [40.0, 898.0], [40.1, 898.0], [40.2, 898.0], [40.3, 898.0], [40.4, 898.0], [40.5, 899.0], [40.6, 899.0], [40.7, 899.0], [40.8, 899.0], [40.9, 899.0], [41.0, 899.0], [41.1, 900.0], [41.2, 900.0], [41.3, 900.0], [41.4, 900.0], [41.5, 900.0], [41.6, 900.0], [41.7, 900.0], [41.8, 900.0], [41.9, 901.0], [42.0, 901.0], [42.1, 901.0], [42.2, 901.0], [42.3, 901.0], [42.4, 901.0], [42.5, 902.0], [42.6, 902.0], [42.7, 903.0], [42.8, 903.0], [42.9, 904.0], [43.0, 904.0], [43.1, 905.0], [43.2, 905.0], [43.3, 994.0], [43.4, 994.0], [43.5, 994.0], [43.6, 994.0], [43.7, 995.0], [43.8, 995.0], [43.9, 995.0], [44.0, 995.0], [44.1, 996.0], [44.2, 996.0], [44.3, 996.0], [44.4, 996.0], [44.5, 997.0], [44.6, 997.0], [44.7, 997.0], [44.8, 997.0], [44.9, 998.0], [45.0, 998.0], [45.1, 998.0], [45.2, 998.0], [45.3, 1000.0], [45.4, 1000.0], [45.5, 1000.0], [45.6, 1000.0], [45.7, 1002.0], [45.8, 1002.0], [45.9, 1003.0], [46.0, 1003.0], [46.1, 1003.0], [46.2, 1003.0], [46.3, 1004.0], [46.4, 1004.0], [46.5, 1005.0], [46.6, 1005.0], [46.7, 1094.0], [46.8, 1094.0], [46.9, 1095.0], [47.0, 1095.0], [47.1, 1095.0], [47.2, 1095.0], [47.3, 1095.0], [47.4, 1095.0], [47.5, 1096.0], [47.6, 1096.0], [47.7, 1096.0], [47.8, 1096.0], [47.9, 1096.0], [48.0, 1096.0], [48.1, 1098.0], [48.2, 1098.0], [48.3, 1098.0], [48.4, 1098.0], [48.5, 1098.0], [48.6, 1098.0], [48.7, 1098.0], [48.8, 1098.0], [48.9, 1100.0], [49.0, 1100.0], [49.1, 1100.0], [49.2, 1100.0], [49.3, 1100.0], [49.4, 1100.0], [49.5, 1100.0], [49.6, 1100.0], [49.7, 1107.0], [49.8, 1107.0], [49.9, 1112.0], [50.0, 1112.0], [50.1, 1191.0], [50.2, 1191.0], [50.3, 1192.0], [50.4, 1192.0], [50.5, 1194.0], [50.6, 1194.0], [50.7, 1195.0], [50.8, 1195.0], [50.9, 1195.0], [51.0, 1195.0], [51.1, 1195.0], [51.2, 1195.0], [51.3, 1196.0], [51.4, 1196.0], [51.5, 1196.0], [51.6, 1196.0], [51.7, 1197.0], [51.8, 1197.0], [51.9, 1197.0], [52.0, 1197.0], [52.1, 1198.0], [52.2, 1198.0], [52.3, 1198.0], [52.4, 1198.0], [52.5, 1200.0], [52.6, 1200.0], [52.7, 1200.0], [52.8, 1200.0], [52.9, 1201.0], [53.0, 1201.0], [53.1, 1201.0], [53.2, 1201.0], [53.3, 1201.0], [53.4, 1201.0], [53.5, 1201.0], [53.6, 1201.0], [53.7, 1202.0], [53.8, 1202.0], [53.9, 1202.0], [54.0, 1202.0], [54.1, 1202.0], [54.2, 1202.0], [54.3, 1202.0], [54.4, 1202.0], [54.5, 1205.0], [54.6, 1205.0], [54.7, 1207.0], [54.8, 1207.0], [54.9, 1293.0], [55.0, 1293.0], [55.1, 1294.0], [55.2, 1294.0], [55.3, 1295.0], [55.4, 1295.0], [55.5, 1295.0], [55.6, 1295.0], [55.7, 1295.0], [55.8, 1295.0], [55.9, 1297.0], [56.0, 1297.0], [56.1, 1297.0], [56.2, 1297.0], [56.3, 1299.0], [56.4, 1299.0], [56.5, 1299.0], [56.6, 1299.0], [56.7, 1299.0], [56.8, 1299.0], [56.9, 1300.0], [57.0, 1300.0], [57.1, 1300.0], [57.2, 1300.0], [57.3, 1302.0], [57.4, 1302.0], [57.5, 1302.0], [57.6, 1302.0], [57.7, 1302.0], [57.8, 1302.0], [57.9, 1304.0], [58.0, 1304.0], [58.1, 1307.0], [58.2, 1307.0], [58.3, 1394.0], [58.4, 1394.0], [58.5, 1395.0], [58.6, 1395.0], [58.7, 1395.0], [58.8, 1395.0], [58.9, 1396.0], [59.0, 1396.0], [59.1, 1396.0], [59.2, 1396.0], [59.3, 1397.0], [59.4, 1397.0], [59.5, 1397.0], [59.6, 1397.0], [59.7, 1398.0], [59.8, 1398.0], [59.9, 1398.0], [60.0, 1398.0], [60.1, 1398.0], [60.2, 1398.0], [60.3, 1398.0], [60.4, 1398.0], [60.5, 1399.0], [60.6, 1399.0], [60.7, 1399.0], [60.8, 1399.0], [60.9, 1400.0], [61.0, 1400.0], [61.1, 1401.0], [61.2, 1401.0], [61.3, 1401.0], [61.4, 1401.0], [61.5, 1401.0], [61.6, 1401.0], [61.7, 1403.0], [61.8, 1403.0], [61.9, 1404.0], [62.0, 1404.0], [62.1, 1407.0], [62.2, 1407.0], [62.3, 1408.0], [62.4, 1408.0], [62.5, 1491.0], [62.6, 1491.0], [62.7, 1491.0], [62.8, 1491.0], [62.9, 1492.0], [63.0, 1492.0], [63.1, 1493.0], [63.2, 1493.0], [63.3, 1493.0], [63.4, 1493.0], [63.5, 1493.0], [63.6, 1493.0], [63.7, 1495.0], [63.8, 1495.0], [63.9, 1495.0], [64.0, 1495.0], [64.1, 1495.0], [64.2, 1495.0], [64.3, 1495.0], [64.4, 1495.0], [64.5, 1496.0], [64.6, 1496.0], [64.7, 1496.0], [64.8, 1496.0], [64.9, 1496.0], [65.0, 1496.0], [65.1, 1497.0], [65.2, 1497.0], [65.3, 1498.0], [65.4, 1498.0], [65.5, 1498.0], [65.6, 1498.0], [65.7, 1499.0], [65.8, 1499.0], [65.9, 1500.0], [66.0, 1500.0], [66.1, 1500.0], [66.2, 1500.0], [66.3, 1501.0], [66.4, 1501.0], [66.5, 1501.0], [66.6, 1501.0], [66.7, 1501.0], [66.8, 1501.0], [66.9, 1501.0], [67.0, 1501.0], [67.1, 1502.0], [67.2, 1502.0], [67.3, 1502.0], [67.4, 1502.0], [67.5, 1503.0], [67.6, 1503.0], [67.7, 1504.0], [67.8, 1504.0], [67.9, 1506.0], [68.0, 1506.0], [68.1, 1514.0], [68.2, 1514.0], [68.3, 1591.0], [68.4, 1591.0], [68.5, 1596.0], [68.6, 1596.0], [68.7, 1596.0], [68.8, 1596.0], [68.9, 1598.0], [69.0, 1598.0], [69.1, 1599.0], [69.2, 1599.0], [69.3, 1601.0], [69.4, 1601.0], [69.5, 1601.0], [69.6, 1601.0], [69.7, 1601.0], [69.8, 1601.0], [69.9, 1604.0], [70.0, 1604.0], [70.1, 1604.0], [70.2, 1604.0], [70.3, 1689.0], [70.4, 1689.0], [70.5, 1690.0], [70.6, 1690.0], [70.7, 1693.0], [70.8, 1693.0], [70.9, 1694.0], [71.0, 1694.0], [71.1, 1695.0], [71.2, 1695.0], [71.3, 1695.0], [71.4, 1695.0], [71.5, 1697.0], [71.6, 1697.0], [71.7, 1697.0], [71.8, 1697.0], [71.9, 1697.0], [72.0, 1697.0], [72.1, 1698.0], [72.2, 1698.0], [72.3, 1698.0], [72.4, 1698.0], [72.5, 1699.0], [72.6, 1699.0], [72.7, 1712.0], [72.8, 1712.0], [72.9, 1794.0], [73.0, 1794.0], [73.1, 1799.0], [73.2, 1799.0], [73.3, 1801.0], [73.4, 1801.0], [73.5, 1801.0], [73.6, 1801.0], [73.7, 1806.0], [73.8, 1806.0], [73.9, 1891.0], [74.0, 1891.0], [74.1, 1896.0], [74.2, 1896.0], [74.3, 1896.0], [74.4, 1896.0], [74.5, 1896.0], [74.6, 1896.0], [74.7, 1897.0], [74.8, 1897.0], [74.9, 1897.0], [75.0, 1897.0], [75.1, 1897.0], [75.2, 1897.0], [75.3, 1899.0], [75.4, 1899.0], [75.5, 1899.0], [75.6, 1899.0], [75.7, 1899.0], [75.8, 1899.0], [75.9, 1904.0], [76.0, 1904.0], [76.1, 1906.0], [76.2, 1906.0], [76.3, 1995.0], [76.4, 1995.0], [76.5, 1996.0], [76.6, 1996.0], [76.7, 1996.0], [76.8, 1996.0], [76.9, 1996.0], [77.0, 1996.0], [77.1, 1996.0], [77.2, 1996.0], [77.3, 1997.0], [77.4, 1997.0], [77.5, 1997.0], [77.6, 1997.0], [77.7, 1999.0], [77.8, 1999.0], [77.9, 2000.0], [78.0, 2000.0], [78.1, 2000.0], [78.2, 2000.0], [78.3, 2001.0], [78.4, 2001.0], [78.5, 2003.0], [78.6, 2003.0], [78.7, 2010.0], [78.8, 2010.0], [78.9, 2094.0], [79.0, 2094.0], [79.1, 2094.0], [79.2, 2094.0], [79.3, 2095.0], [79.4, 2095.0], [79.5, 2096.0], [79.6, 2096.0], [79.7, 2096.0], [79.8, 2096.0], [79.9, 2099.0], [80.0, 2099.0], [80.1, 2100.0], [80.2, 2100.0], [80.3, 2101.0], [80.4, 2101.0], [80.5, 2101.0], [80.6, 2101.0], [80.7, 2102.0], [80.8, 2102.0], [80.9, 2192.0], [81.0, 2192.0], [81.1, 2193.0], [81.2, 2193.0], [81.3, 2194.0], [81.4, 2194.0], [81.5, 2198.0], [81.6, 2198.0], [81.7, 2200.0], [81.8, 2200.0], [81.9, 2202.0], [82.0, 2202.0], [82.1, 2291.0], [82.2, 2291.0], [82.3, 2291.0], [82.4, 2291.0], [82.5, 2291.0], [82.6, 2291.0], [82.7, 2294.0], [82.8, 2294.0], [82.9, 2298.0], [83.0, 2298.0], [83.1, 2298.0], [83.2, 2298.0], [83.3, 2299.0], [83.4, 2299.0], [83.5, 2300.0], [83.6, 2300.0], [83.7, 2301.0], [83.8, 2301.0], [83.9, 2301.0], [84.0, 2301.0], [84.1, 2302.0], [84.2, 2302.0], [84.3, 2303.0], [84.4, 2303.0], [84.5, 2397.0], [84.6, 2397.0], [84.7, 2399.0], [84.8, 2399.0], [84.9, 2399.0], [85.0, 2399.0], [85.1, 2401.0], [85.2, 2401.0], [85.3, 2496.0], [85.4, 2496.0], [85.5, 2496.0], [85.6, 2496.0], [85.7, 2499.0], [85.8, 2499.0], [85.9, 2501.0], [86.0, 2501.0], [86.1, 2502.0], [86.2, 2502.0], [86.3, 2596.0], [86.4, 2596.0], [86.5, 2599.0], [86.6, 2599.0], [86.7, 2602.0], [86.8, 2602.0], [86.9, 2694.0], [87.0, 2694.0], [87.1, 2798.0], [87.2, 2798.0], [87.3, 2800.0], [87.4, 2800.0], [87.5, 2894.0], [87.6, 2894.0], [87.7, 2896.0], [87.8, 2896.0], [87.9, 2903.0], [88.0, 2903.0], [88.1, 2994.0], [88.2, 2994.0], [88.3, 3002.0], [88.4, 3002.0], [88.5, 3100.0], [88.6, 3100.0], [88.7, 3191.0], [88.8, 3191.0], [88.9, 3295.0], [89.0, 3295.0], [89.1, 3299.0], [89.2, 3299.0], [89.3, 3394.0], [89.4, 3394.0], [89.5, 3399.0], [89.6, 3399.0], [89.7, 3400.0], [89.8, 3400.0], [89.9, 4905.0], [90.0, 4905.0], [90.1, 5097.0], [90.2, 5097.0], [90.3, 5099.0], [90.4, 5099.0], [90.5, 5295.0], [90.6, 5295.0], [90.7, 5298.0], [90.8, 5298.0], [90.9, 5500.0], [91.0, 5500.0], [91.1, 5502.0], [91.2, 5502.0], [91.3, 5598.0], [91.4, 5598.0], [91.5, 5692.0], [91.6, 5692.0], [91.7, 5699.0], [91.8, 5699.0], [91.9, 5702.0], [92.0, 5702.0], [92.1, 5900.0], [92.2, 5900.0], [92.3, 5990.0], [92.4, 5990.0], [92.5, 6004.0], [92.6, 6004.0], [92.7, 6090.0], [92.8, 6090.0], [92.9, 6196.0], [93.0, 6196.0], [93.1, 6196.0], [93.2, 6196.0], [93.3, 6197.0], [93.4, 6197.0], [93.5, 6203.0], [93.6, 6203.0], [93.7, 6305.0], [93.8, 6305.0], [93.9, 6392.0], [94.0, 6392.0], [94.1, 6397.0], [94.2, 6397.0], [94.3, 6400.0], [94.4, 6400.0], [94.5, 6470.0], [94.6, 6470.0], [94.7, 6498.0], [94.8, 6498.0], [94.9, 6599.0], [95.0, 6599.0], [95.1, 6689.0], [95.2, 6689.0], [95.3, 6704.0], [95.4, 6704.0], [95.5, 6995.0], [95.6, 6995.0], [95.7, 7301.0], [95.8, 7301.0], [95.9, 7404.0], [96.0, 7404.0], [96.1, 7697.0], [96.2, 7697.0], [96.3, 7698.0], [96.4, 7698.0], [96.5, 7802.0], [96.6, 7802.0], [96.7, 8597.0], [96.8, 8597.0], [96.9, 10199.0], [97.0, 10199.0], [97.1, 10969.0], [97.2, 10969.0], [97.3, 11109.0], [97.4, 11109.0], [97.5, 11128.0], [97.6, 11128.0], [97.7, 11148.0], [97.8, 11148.0], [97.9, 11247.0], [98.0, 11247.0], [98.1, 11402.0], [98.2, 11402.0], [98.3, 11645.0], [98.4, 11645.0], [98.5, 11705.0], [98.6, 11705.0], [98.7, 11784.0], [98.8, 11784.0], [98.9, 11881.0], [99.0, 11881.0], [99.1, 11980.0], [99.2, 11980.0], [99.3, 12043.0], [99.4, 12043.0], [99.5, 12350.0], [99.6, 12350.0], [99.7, 14082.0], [99.8, 14082.0], [99.9, 15261.0], [100.0, 15261.0]], "isOverall": false, "label": "visit-index", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 90.0, "series": [{"data": [[0.0, 41.0], [600.0, 27.0], [700.0, 30.0], [800.0, 18.0], [900.0, 11.0], [1000.0, 4.0], [1100.0, 5.0], [1200.0, 4.0], [1300.0, 5.0], [1400.0, 2.0], [1500.0, 2.0], [100.0, 69.0], [1600.0, 1.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [2100.0, 1.0], [2200.0, 1.0], [2300.0, 1.0], [2500.0, 1.0], [200.0, 90.0], [4400.0, 2.0], [300.0, 73.0], [4900.0, 2.0], [5000.0, 4.0], [5100.0, 1.0], [5400.0, 2.0], [400.0, 65.0], [500.0, 35.0]], "isOverall": false, "label": "query-1", "isController": false}, {"data": [[0.0, 41.0], [600.0, 32.0], [700.0, 19.0], [800.0, 18.0], [900.0, 12.0], [1000.0, 12.0], [1100.0, 10.0], [1200.0, 6.0], [1300.0, 1.0], [1400.0, 2.0], [1500.0, 1.0], [100.0, 71.0], [1600.0, 1.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 2.0], [2000.0, 1.0], [2100.0, 2.0], [2200.0, 1.0], [200.0, 77.0], [3500.0, 1.0], [4500.0, 2.0], [4800.0, 1.0], [300.0, 72.0], [5000.0, 1.0], [4900.0, 1.0], [5200.0, 1.0], [5300.0, 1.0], [5400.0, 7.0], [400.0, 51.0], [500.0, 51.0]], "isOverall": false, "label": "query-2", "isController": false}, {"data": [[0.0, 42.0], [600.0, 29.0], [700.0, 28.0], [800.0, 11.0], [900.0, 10.0], [1000.0, 6.0], [1100.0, 6.0], [1200.0, 3.0], [1300.0, 2.0], [1500.0, 1.0], [100.0, 70.0], [1600.0, 2.0], [1700.0, 1.0], [1900.0, 2.0], [2100.0, 1.0], [2300.0, 1.0], [2800.0, 1.0], [200.0, 78.0], [4400.0, 1.0], [4700.0, 1.0], [4800.0, 1.0], [300.0, 79.0], [4900.0, 3.0], [5100.0, 1.0], [5400.0, 1.0], [5500.0, 2.0], [400.0, 65.0], [500.0, 52.0]], "isOverall": false, "label": "query-3", "isController": false}, {"data": [[0.0, 5.0], [600.0, 35.0], [700.0, 26.0], [800.0, 32.0], [900.0, 21.0], [1000.0, 18.0], [1100.0, 18.0], [1200.0, 22.0], [1300.0, 20.0], [1400.0, 25.0], [1500.0, 17.0], [1600.0, 17.0], [1700.0, 3.0], [1800.0, 13.0], [1900.0, 10.0], [2000.0, 11.0], [2100.0, 8.0], [2200.0, 9.0], [2300.0, 8.0], [2400.0, 4.0], [2500.0, 4.0], [2600.0, 2.0], [2700.0, 1.0], [2800.0, 3.0], [2900.0, 2.0], [3000.0, 1.0], [3100.0, 2.0], [3300.0, 2.0], [3200.0, 2.0], [3400.0, 1.0], [5000.0, 2.0], [4900.0, 1.0], [5200.0, 2.0], [5600.0, 2.0], [5500.0, 3.0], [5700.0, 1.0], [6000.0, 2.0], [6100.0, 3.0], [5900.0, 2.0], [6200.0, 1.0], [6300.0, 3.0], [6400.0, 3.0], [6500.0, 1.0], [6600.0, 1.0], [6700.0, 1.0], [6900.0, 1.0], [7400.0, 1.0], [7300.0, 1.0], [7600.0, 2.0], [7800.0, 1.0], [8500.0, 1.0], [10100.0, 1.0], [11100.0, 3.0], [11200.0, 1.0], [10900.0, 1.0], [11600.0, 1.0], [11700.0, 2.0], [11400.0, 1.0], [12000.0, 1.0], [11900.0, 1.0], [11800.0, 1.0], [12300.0, 1.0], [14000.0, 1.0], [15200.0, 1.0], [100.0, 13.0], [200.0, 20.0], [300.0, 24.0], [400.0, 22.0], [500.0, 28.0]], "isOverall": false, "label": "visit-index", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 15200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 234.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1084.0, "series": [{"data": [[0.0, 1084.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 682.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 234.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 42.139821029082725, "minX": 1.64840334E12, "maxY": 50.0, "series": [{"data": [[1.6484034E12, 42.139821029082725], [1.64840334E12, 50.0]], "isOverall": false, "label": "load-testing", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6484034E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.0, "maxY": 2107.887139107613, "series": [{"data": [[33.0, 470.0], [2.0, 94.0], [35.0, 494.0], [34.0, 449.5], [37.0, 399.75], [39.0, 304.0], [38.0, 491.0], [41.0, 258.2], [40.0, 331.6666666666667], [43.0, 265.0], [42.0, 294.0], [45.0, 847.6666666666666], [47.0, 271.75], [46.0, 578.6666666666667], [49.0, 357.69230769230774], [48.0, 307.06666666666666], [3.0, 98.0], [50.0, 603.1461538461538], [5.0, 101.5], [7.0, 100.0], [11.0, 100.0], [12.0, 199.0], [14.0, 101.0], [15.0, 103.0], [1.0, 3.0], [17.0, 102.0], [19.0, 99.66666666666667], [20.0, 221.2], [21.0, 299.0], [22.0, 300.8333333333333], [24.0, 253.5], [25.0, 350.0], [27.0, 203.0], [28.0, 152.0], [29.0, 232.0], [30.0, 198.0]], "isOverall": false, "label": "query-1", "isController": false}, {"data": [[46.591999999999985, 541.4340000000003]], "isOverall": false, "label": "query-1-Aggregated", "isController": false}, {"data": [[33.0, 300.0], [2.0, 50.5], [35.0, 401.0], [34.0, 567.6666666666666], [37.0, 496.3333333333333], [41.0, 444.0], [40.0, 204.0], [43.0, 549.0], [42.0, 303.0], [45.0, 574.25], [44.0, 203.0], [47.0, 294.5], [46.0, 251.99999999999994], [49.0, 413.16666666666663], [48.0, 375.2857142857143], [50.0, 670.8974358974357], [4.0, 97.5], [6.0, 296.0], [7.0, 199.5], [11.0, 178.8], [12.0, 296.0], [13.0, 102.0], [14.0, 398.0], [19.0, 249.375], [20.0, 299.3333333333333], [21.0, 195.0], [22.0, 318.8], [25.0, 300.5], [26.0, 300.0], [27.0, 649.5], [30.0, 195.0], [31.0, 101.0]], "isOverall": false, "label": "query-2", "isController": false}, {"data": [[46.436, 599.8020000000002]], "isOverall": false, "label": "query-2-Aggregated", "isController": false}, {"data": [[33.0, 453.75], [2.0, 4.0], [35.0, 421.25], [34.0, 300.3333333333333], [37.0, 374.5], [38.0, 400.0], [41.0, 448.5], [40.0, 273.25], [43.0, 467.6666666666667], [45.0, 681.6], [44.0, 399.0], [46.0, 210.55555555555554], [49.0, 351.59999999999997], [48.0, 379.9285714285715], [50.0, 578.3417721518992], [4.0, 99.5], [5.0, 104.0], [7.0, 102.0], [8.0, 196.0], [10.0, 101.0], [11.0, 102.0], [13.0, 101.0], [14.0, 598.0], [15.0, 148.0], [1.0, 90.0], [19.0, 425.75], [20.0, 141.0], [22.0, 298.8], [24.0, 70.33333333333334], [25.0, 198.0], [27.0, 397.0], [29.0, 104.0], [30.0, 574.5], [31.0, 105.0]], "isOverall": false, "label": "query-3", "isController": false}, {"data": [[46.608000000000004, 525.5480000000006]], "isOverall": false, "label": "query-3-Aggregated", "isController": false}, {"data": [[33.0, 995.0], [2.0, 105.0], [34.0, 1074.0], [41.0, 620.0], [40.0, 470.33333333333337], [43.0, 606.0], [42.0, 396.0], [45.0, 1118.4999999999995], [44.0, 703.0], [47.0, 2094.0], [46.0, 789.2222222222222], [49.0, 1375.1333333333332], [48.0, 1382.0], [50.0, 2107.887139107613], [6.0, 348.0], [7.0, 499.5], [11.0, 504.0], [12.0, 1100.0], [13.0, 522.4], [14.0, 300.0], [15.0, 698.0], [1.0, 106.0], [19.0, 625.75], [20.0, 848.5], [22.0, 997.0], [25.0, 1206.8], [26.0, 973.25], [27.0, 449.5], [28.0, 1562.3333333333333], [29.0, 1671.75], [31.0, 654.0]], "isOverall": false, "label": "visit-index", "isController": false}, {"data": [[46.30999999999998, 1845.5419999999997]], "isOverall": false, "label": "visit-index-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1819.95, "minX": 1.64840334E12, "maxY": 6909.983333333334, "series": [{"data": [[1.6484034E12, 5898.35], [1.64840334E12, 6909.983333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6484034E12, 1819.95], [1.64840334E12, 2255.05]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6484034E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 373.88425925925924, "minX": 1.64840334E12, "maxY": 2605.159695817492, "series": [{"data": [[1.6484034E12, 383.1363636363639], [1.64840334E12, 665.810714285714]], "isOverall": false, "label": "query-1", "isController": false}, {"data": [[1.6484034E12, 375.4705882352942], [1.64840334E12, 777.4982078853047]], "isOverall": false, "label": "query-2", "isController": false}, {"data": [[1.6484034E12, 373.88425925925924], [1.64840334E12, 640.897887323944]], "isOverall": false, "label": "query-3", "isController": false}, {"data": [[1.6484034E12, 1002.590717299578], [1.64840334E12, 2605.159695817492]], "isOverall": false, "label": "visit-index", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6484034E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 373.8611111111112, "minX": 1.64840334E12, "maxY": 2159.7490494296594, "series": [{"data": [[1.6484034E12, 383.10454545454553], [1.64840334E12, 665.728571428572]], "isOverall": false, "label": "query-1", "isController": false}, {"data": [[1.6484034E12, 375.42986425339376], [1.64840334E12, 777.4229390681002]], "isOverall": false, "label": "query-2", "isController": false}, {"data": [[1.6484034E12, 373.8611111111112], [1.64840334E12, 640.8345070422537]], "isOverall": false, "label": "query-3", "isController": false}, {"data": [[1.6484034E12, 747.3080168776374], [1.64840334E12, 2159.7490494296594]], "isOverall": false, "label": "visit-index", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6484034E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64840334E12, "maxY": 0.3655913978494623, "series": [{"data": [[1.6484034E12, 0.0], [1.64840334E12, 0.07142857142857136]], "isOverall": false, "label": "query-1", "isController": false}, {"data": [[1.6484034E12, 0.0], [1.64840334E12, 0.3655913978494623]], "isOverall": false, "label": "query-2", "isController": false}, {"data": [[1.6484034E12, 0.0], [1.64840334E12, 0.03521126760563376]], "isOverall": false, "label": "query-3", "isController": false}, {"data": [[1.6484034E12, 0.0], [1.64840334E12, 0.2775665399239549]], "isOverall": false, "label": "visit-index", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6484034E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64840334E12, "maxY": 15261.0, "series": [{"data": [[1.6484034E12, 3100.0], [1.64840334E12, 15261.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6484034E12, 1201.0], [1.64840334E12, 2394.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6484034E12, 2299.2], [1.64840334E12, 11240.070000000007]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6484034E12, 1534.5], [1.64840334E12, 5417.149999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6484034E12, 0.0], [1.64840334E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6484034E12, 399.0], [1.64840334E12, 503.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6484034E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 100.0, "minX": 2.0, "maxY": 8410.0, "series": [{"data": [[2.0, 8410.0], [45.0, 701.0], [47.0, 897.0], [49.0, 504.0], [53.0, 903.0], [52.0, 651.5], [55.0, 199.0], [56.0, 702.0], [59.0, 503.0], [62.0, 403.0], [64.0, 494.0], [67.0, 396.0], [71.0, 697.0], [74.0, 401.0], [78.0, 501.0], [79.0, 402.0], [83.0, 395.0], [85.0, 499.0], [84.0, 406.5], [91.0, 696.0], [90.0, 503.5], [96.0, 402.5], [117.0, 302.0], [126.0, 300.0], [9.0, 500.0], [20.0, 4971.0], [24.0, 100.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 126.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 100.0, "minX": 2.0, "maxY": 8405.5, "series": [{"data": [[2.0, 8405.5], [45.0, 701.0], [47.0, 696.0], [49.0, 504.0], [53.0, 902.5], [52.0, 549.0], [55.0, 199.0], [56.0, 698.5], [59.0, 499.0], [62.0, 401.5], [64.0, 403.5], [67.0, 302.0], [71.0, 601.0], [74.0, 399.0], [78.0, 497.5], [79.0, 399.0], [83.0, 395.0], [85.0, 499.0], [84.0, 350.0], [91.0, 603.0], [90.0, 501.0], [96.0, 400.5], [117.0, 302.0], [126.0, 298.5], [9.0, 500.0], [20.0, 4971.0], [24.0, 100.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 126.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 14.066666666666666, "minX": 1.64840334E12, "maxY": 19.266666666666666, "series": [{"data": [[1.6484034E12, 14.066666666666666], [1.64840334E12, 19.266666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6484034E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 14.9, "minX": 1.64840334E12, "maxY": 18.433333333333334, "series": [{"data": [[1.6484034E12, 14.9], [1.64840334E12, 18.433333333333334]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6484034E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.6, "minX": 1.64840334E12, "maxY": 4.733333333333333, "series": [{"data": [[1.6484034E12, 3.6], [1.64840334E12, 4.733333333333333]], "isOverall": false, "label": "query-3-success", "isController": false}, {"data": [[1.6484034E12, 3.6666666666666665], [1.64840334E12, 4.666666666666667]], "isOverall": false, "label": "query-1-success", "isController": false}, {"data": [[1.6484034E12, 3.95], [1.64840334E12, 4.383333333333334]], "isOverall": false, "label": "visit-index-success", "isController": false}, {"data": [[1.6484034E12, 3.683333333333333], [1.64840334E12, 4.65]], "isOverall": false, "label": "query-2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6484034E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 14.9, "minX": 1.64840334E12, "maxY": 18.433333333333334, "series": [{"data": [[1.6484034E12, 14.9], [1.64840334E12, 18.433333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6484034E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

